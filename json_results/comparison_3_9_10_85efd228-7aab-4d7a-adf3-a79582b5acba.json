{
    "text1": "tc sakarya uygulamali bilimler üniversitesi teknoloji fakültesi bilgisayar mühendisliği bölümü akilli intihal önleme araçlari eğitim uygulama bilgisayar mühendisliği tasarımı raporu b210109370 hakan değer b210109029 emre almamiş b210109017 ismail selim inanir danışmanı dr öğr üyesi selman hizal ocak 2025 tc sakarya uygulamali bilimler üniversitesi teknoloji fakültesi bilgisayar mühendisliği bölümü akilli intihal önleme araçlari eğitim uygulama bilgisayar mühendisliği tasarımı raporu b210109370 hakan değer b210109029 emre almamiş b210109017 ismail selim inanir danışmanı dr öğr üyesi selman hizal rapor 2025 tarihinde aşağıdaki jüri tarafından oybirliği oyçokluğu kabul edilmiştir danışman üye üye beyan rapor içindeki tüm verilerin akademik kurallar çerçevesinde tarafımdan elde edildiğini görsel yazılı tüm bilgi sonuçların akademik etik kurallara uygun şekilde sunulduğunu kullanılan verilerde herhangi tahrifat yapılmadığını başkalarının eserlerinden yararlanılması durumunda bilimsel normlara uygun olarak atıfta bulunulduğunu raporda yer alan verilerin üniversite veya başka üniversitede herhangi çalışmada kullanılmadığını beyan ederim hakan değer emre almamiş ismail selim inanir 10012025 10012025 10012025 teşekkür lisans eğitimimiz boyunca değerli bilgi deneyimlerinden yararlandığımız konuda bilgi desteğini almaktan çekinmediğimiz araştırmanın planlanmasından yazılmasına kadar tüm aşamalarında yardımlarını esirgemeyen teşvik eden aynı titizlikte bizi yönlendiren değerli danışman hocamız dr öğr üyesi selman hizala teşekkürlerimizi sunarız simgeler kisaltmalar listesi api application programming interface mssql microsoft sql server nlp natural language processing pdf portable document format nltk natural language toolkit tfidf term frequencyinverse document frequency jwt json web token orm object relational mapping json javascript object notation acid atomicity consistency isolation durability sql structured query language şekiller listesi şekil 11 usecase diyagramı 5 şekil 12 admin paneli 5 şekil 13 öğretmen paneli 6 şekil 14 öğrenci paneli 6 şekil 31 kullanıcı ihtiyaç analizi 17 şekil 32 sistem mimarisi 19 şekil 33 tfidf formülü 24 şekil 34 levenshtein distance örneği 25 şekil 35 test 1 girdisi 26 şekil 36 test 1 sonucu 26 şekil 37 test 2 girdisi 27 şekil 38 test 2 sonucu 27 şekil 39 test 3 girdisi 27 şekil 310 test 3 sonucu 28 şekil 311 flask endpoint 29 şekil 312 veri tabanı tablosu 31 şekil 313 vuejs yönlendirme 32 şekil 314 postman api kontrolü 33 şekil 315 sistem genel akış diyagramı 34 şekil 316 metin ön işleme şeması 35 şekil 317 karşılaştırma şeması 35 tablolar listesi tablo 11 işzaman çizelgesi 8 tablo 21 araç karşılaştırma tablosu 14 tablo 31 tasarım öngörülen bütçe tablosu 35 özet anahtar kelimeler akademik intihal doğal dil işleme nlp cosine similarity vuejs flask mssql çalışmada akademik belgeler arasında benzerlik tespiti yapabilen çoka eşleştirme yöntemi çalışan kullanıcı dostu yazılım geliştirilmiştir proje mevcut ticari intihal araçlarının yetersizliklerini aşarak özellikle grup ödevleri projelerde detaylı analizler sunmayı amaçlamıştır geliştirilen sistem flask tabanlı arka yüz vuejs ön yüz mssql veri tabanı çeşitli metin analizi algoritmalarını cosine similarity jaccard index levenshtein distance içermektedir kullanıcılar farklı formatlardaki dosyaları sisteme yükleyerek analiz başlatabilmekte sonuçları detaylı görselleştirmeler değerlendirebilmektedir çalışma sırasında postman api testleri yapılmış elde edilen sonuçlar mssql veri tabanında saklanmıştır test sonuçlarına göre sistemin manuel yöntemlere kıyasla 85 zaman tasarrufu sağladığı doğruluk oranının 92 olduğu görülmüştür kullanıcı deneyimi testlerinden 92 oranında olumlu geri dönüş alınmıştır projenin çıktıları özellikle eğitim kurumlarında grup çalışmaları tez analizlerinde verimliliği artırarak akademik etik özgün düşünme becerilerinin teşvik edilmesine olanak sağlamıştır gelecekteki çalışmalarda büyük veri setleri optimizasyon gelişmiş doğal dil işleme tekniklerinin entegrasyonu hedeflenmektedir bölüm 1 giriş bölümde dijitalleşmenin etkileriyle birlikte akademik metinlerin orijinalliğini koruma ihtiyacından bağlamda geliştirilen projeden kısaca bahsedilecektir projenin amacı kapsamı özgün değeri intihalin önlenmesi süreci detaylandırılacaktır 11 genel bilgiler dijitalleşmenin hızla yaygınlaşması bilgiye erişimi kolaylaştırmış akademik çalışmalarda geniş bilgi havuzu sunmuştur ancak durum intihal riskini artırmış akademik etik ihlallerini önlemek yeni yöntemler geliştirilmesini gerekli kılmıştır 1 akademik metinlerin orijinalliğini korumak eğitim kurumlarının araştırmacıların en önemli hedeflerinden biridir intihali önlemek kullanılan teknolojik araçlar yalnızca bireysel haksızlıkları önlemekle kalmayıp öğrencilerin özgün düşünme becerilerini geliştirmeye katkı sunar proje akademik metinlerin birbiriyle benzerlik analizini yapan kullanıcı dostu eğitim odaklı araç geliştirmeyi amaçlamaktadır geliştirilecek sistem ödev tez proje gibi dosyaların sisteme yüklenerek birbirleriyle karşılaştırılmasını benzerlik oranlarının hesaplanmasını sağlayacaktır 12 akademik intihal tanımı etkileri korunma yolları dijital ortamların yaygınlaşması akademik çalışmalarda intihal riskini artırmıştır akademik etik ihlallerinin önlenmesi uygun yöntemlerin teknolojilerin geliştirilmesi büyük önem taşır özellikle grup çalışmaları gibi durumlarda ödevlerin benzerlik oranlarının öğretim görevlileri tarafından manuel olarak kontrol edilmesi zaman alıcı hatalara açık süreçtir durum etkili sistematik çözüm ihtiyacını doğurmuştur intihalin önlenmesi yalnızca bireysel etik hatalarını engellemekle kalmaz aynı zamanda öğrencilerin özgün düşünme yazma becerilerinin geliştirilmesine olanak tanır 13 problem tanımı akademik metinlerin orijinalliğini koruma amacıyla geliştirilen ticari intihal tespit araçları örneğin turnitin ithenticate genellikle bire karşılaştırmalar yapmaktadır geniş kullanıcı tabanı yüksek maliyetli çözümler sunmaktadır bunun sonucunda özellikle sınıf içi ödev veya tez çalışmaları gibi senaryolarda aynı öğrenci grubu içinde belgelerin birbiriyle olan benzerliğini tespit etmek eğitim kurumları karmaşık maliyetli süreç haline gelmektedir örneğin üniversite sınıfında yapay zekâ uygulamaları dersi kapsamında 30 öğrenciye aynı konu başlığı verilerek bireysel rapor hazırlamaları istenmiştir öğrenciler raporlarını teslim ettiğinde öğretim görevlisinin 30 raporu birbirleriyle karşılaştırarak benzerlik oranlarını manuel olarak kontrol etmesi gerekmektedir mevcut ticari yazılımlar genellikle tür çoka karşılaştırma gereksinimini desteklememekte öğretim görevlisi açısından zaman alıcı süreç doğurmaktadır ayrıca bazı raporların yalnızca belirli bölümlerinde yüksek düzeyde benzerlik bulunabileceği bölümlerin ayrıntılı şekilde tespit edilmesi gerekmektedir benzer şekilde tez çalışmaları veya grup projeleri gibi süreçlerde farklı ekipler arasında içerik paylaşımı ya intihal olup olmadığını tespit etmek mevcut araçların sınırlı işlevselliği nedeniyle zorluk yaratmaktadır örneğin tez çalışmasının literatür inceleme bölümü diğer tezle büyük ölçüde örtüşüyorsa durumun hangi bölümlerde gerçekleştiği manuel inceleme gerektirebilir projenin temel amacı tür eksiklikleri gidermek eğitim kurumlarının özel ihtiyaçlarına uygun kapsamlı intihal tespit sistemi sunmaktır sistem aynı grup içinde birden fazla belge arasında benzerlik tespitini mümkün kılarken kullanıcıların analiz sürecinde hangi bölümlerin benzerlik gösterdiğini detaylı raporlarla görmesini sağlayacaktır 14 projenin amacı özgün değeri projenin temel amacı akademik belgelerin birbiriyle benzerliklerini analiz eden intihal olasılığını değerlendiren yazılım geliştirmektir kapsamda geliştirilecek sistem metin tabanlı analiz yaklaşımını benimseyerek kullanıcıların dosya formatı sınırlamalarını ortadan kaldırmayı esnek çözüm sunmayı hedeflemektedir projenin özgün değeri mevcut intihal tespit araçlarının sınırlamalarını aşarak özellikle çoka analiz senaryolarında etkili kapsamlı çözüm sunmasında yatmaktadır literatürdeki mevcut araçlar genellikle bire karşılaştırmalara odaklanmış olup belgelerin birbirleriyle olan benzerliğini analiz etme konusunda eksik kalmaktadır proje kapsamında hedeflenen başlıca işlevler şunlardır belgeler arasında çoka eşleşme analizi projenin en önemli özelliklerinden biri sisteme yüklenen tüm metinlerin birbiriyle karşılaştırılmasını sağlamasıdır mevcut ticari yazılımların genellikle bire veya bire karşılaştırma yapabildiği göz önünde bulundurulduğunda sistem grup ödevleri tez çalışmaları veya birden fazla öğrencinin aynı konu üzerinde çalıştığı akademik projelerde kapsamlı değerlendirme imkânı sunar örneğin sınıfta teslim edilen tüm ödevler arasında çoka karşılaştırma yapılarak hangi belgelerin yüksek oranda benzerlik gösterdiği belirlenir bununla birlikte sistem yalnızca benzerlik oranlarını hesaplamakla kalmaz aynı zamanda hangi bölümlerin eşleştiğini ayrıntılı olarak gösterir durum öğretim görevlilerinin zamanını verimli kullanmasına olanak tanırken öğrenciler arasında yapılan iş birliğinin örneğin kaynak paylaşımı veya kopyalama sınırlarını net şekilde ortaya koyar sistem ayrıca benzerlik analizini gerçekleştirmek doğal dil işleme nlp tekniklerinden yararlanarak yalnızca yüzeysel eşleşmeleri değil anlam açısından örtüşen ifadeleri tespit eder detaylı raporlama görselleştirme kullanıcılar sistemin sunduğu detaylı raporlar görselleştirme araçları sayesinde metinler arasındaki benzerlik oranlarını eşleşen bölümleri kolayca değerlendirebilir görselleştirme özelliği eşleşen bölümlerin renk kodlamalarıyla vurgulanmasını farklı belgeler arasındaki bağlantıların grafiksel olarak gösterilmesini içerir örneğin iki metin arasında benzerlik tespit edildiğinde sistem benzerliği interaktif formatta kullanıcıya sunar eşleşen bölümler yan yana karşılaştırmalı olarak görüntülenebilir farklı belgeler arasındaki benzerlik oranları ısı haritası veya grafik üzerinde gösterilebilir görselleştirme araçları kullanıcıların raporlardan hızlı doğru sonuçlar çıkarmasını sağlar ayrıca raporların indirilebilir pdf formatında sunulması analiz geçmişine erişim imkânı uzun vadeli proje takibi açısından büyük kolaylık sağlar düşük maliyet açık kaynak yapı proje ticari yazılımlara alternatif olarak açık kaynaklı düşük maliyetli çözüm sunmayı hedeflemektedir özellik özellikle küçük ölçekli eğitim kurumları önemlidir eğitim odaklı yaklaşım intihali tespit etmenin ötesinde öğrencilere akademik etik bilincini aşılayarak özgün yazma alışkanlıklarını geliştirmelerine katkı sunacaktır sistem düşük maliyeti kullanıcı dostu arayüzü kapsamlı analiz kapasitesiyle hem bireysel hem kurumsal düzeyde intihal tespiti önlenmesi etkili araç olacaktır şekil 11 projenin usecase diyagramı gösterilmiştir şekil 1 usecase diyagramı aşağıda şekil 12 şekil 13 şekil 14da uygulamanın arayüzünden admin öğrenci öğretmen panellerinden görsellere yer verilmiştir şekil 1 admin paneli şekil 1 öğretmen paneli şekil 1 öğrenci paneli 15 projenin yaygın etkisi proje üniversitelerde diğer eğitim kurumlarında ödev proje tez gibi akademik çalışmaların değerlendirme süreçlerini verimli hale getirmeyi hedeflemektedir özellikle aynı sınıfta teslim edilen grup veya bireysel ödevlerin çoka eşleştirilerek analiz edilmesi intihal oranlarının azaltılmasında önemli rol oynayacaktır sistem akademik çalışmaların özgünlüğünü teşvik ederek hem öğrenciler hem öğretim üyeleri güvenilir ortam sağlayacaktır proje eğitim kurumlarının yanı sıra küçük orta ölçekli işletmeler kobiler araştırma merkezleri özel sektör kuruluşlarında kullanım potansiyeline sahiptir örneğin şirket içi raporların teknik dokümanların veya sunumların benzerlik analizi yapılabilir sayede fikirlerin özgünlüğü korunabilir sistem akademik etik bilincini desteklemekte öğrencilerin özgün içerik üretme becerilerini geliştirmelerine yardımcı olmaktadır durum uzun vadede nitelikli araştırmacıların etik değerleri benimsemiş bireylerin yetişmesine olanak tanır öğretim üyelerinin üzerindeki manuel kontrol yükünü azaltarak onların eğitim rehberlik faaliyetlerine fazla odaklanmalarını sağlar 16 standartlar çalışmada kullanılan standartlar aşağıda belirtilmiştir 161 isoiec 25010 software product quality requirements and evaluation square isoiec 25010 yazılım ürününün kalite özelliklerini basit uygulanabilir şekilde değerlendirmek kullanılan standarttır yazılımın işlevsellik performans kullanılabilirlik güvenilirlik taşınabilirlik gibi temel kriterleri göz önünde bulundurur proje kapsamında standarttan yalnızca en temel başlıklar örneğin işlevsellik kullanılabilirlik dikkate alınacaktır 162 ieee 1012 software verification and validation ieee 1012 yazılım doğrulama geçerliliği ilgili standarttır standart yazılımın belirtilen gereksinimlere uygun olup olmadığının doğrulanması son ürünün doğru işlevleri yerine getirdiğinin değerlendirilmesi gereklidir proje kapsamında standart dikkate alınacaktır 163 isoiec 9126 software engineering product quality isoiec 9126 yazılım ürünlerinin kalite özelliklerini tanımlar standart yazılımın işlevsellik kullanılabilirlik verimlilik güvenlik gibi özelliklerini değerlendirir proje kapsamında standart dikkate alınacaktır 164 ieee 829 software testing documentation ieee 829 yazılım test süreçlerinde kullanılabilecek basit belge formatı sunar proje kapsamında yazılımın test senaryoları hata kayıtları standarda uygun olarak dokümante edilecektir böylece test süreçleri sistematik şekilde gerçekleştirilecektir 17 işzaman çizelgesi tablo 1 işzaman çizelgesi tablo 11da işzaman çizelgesi görülmektedir iş paketlerinin içerikleri aşağıdaki gibidir iş paketi 1 proje hazırlığı planlama 1 ay literatür araştırması yapılarak mevcut intihal tespit araçları yöntemleri incelenecek teknik gereksinimler kullanılacak teknolojiler flask vuejs python altyapı ihtiyaçları belirlenecek proje planı iş paketleri detaylandırılacak iş paketi 2 veri tabanı tasarımı altyapı geliştirme 12 ay dosyalar kullanıcılar eşleşmeler gibi veri yapıları tanımlanarak veri tabanı şeması tasarlanacak flask framework kullanılarak temel api altyapısı oluşturulacak crud işlemleri geliştirilecek iş paketi 3 metin karşılaştırma motorunun geliştirilmesi 23 ay python metin karşılaştırma algoritması geliştirilecek istenmeyen kısımlar kapak sayfası içerik önsöz çıkarılacak metin analizi yöntemleri uygulanarak benzerlik oranları hesaplanacak eşleşen bölümler detaylı şekilde analiz edilecek iş paketi 4 arayüz geliştirme 24 ay vuejs kullanıcı giriş ekranı dosya yükleme rapor görüntüleme modülleri tasarlanacak kullanıcı deneyimi iyileştirilecek flask api entegrasyon sağlanacak kullanıcıların kolayca dosya yükleyip rapor alabilmesi gerekli altyapı tamamlanacak iş paketi 5 raporlama görselleştirme modülü 34 ay pythonda görselleştirme kütüphaneleri matplotlib plotly seaborn entegre edilerek metin benzerlik oranları grafiklerle görselleştirilecek elde edilen raporlar arayüzde detaylı olarak sunulacak kullanıcılar indirilebilir hale getirilecek iş paketi 6 test optimizasyon 45 ay yazılımın birim entegrasyon testleri yapılacak algoritmalar büyük dosyalar optimize edilecek yazılım performansı iyileştirilecek tüm süreçlerin işleyişine yönelik test raporları hazırlanacak iş paketi 7 proje sonlandırma dokümantasyon 5 ay kullanım kılavuzu teknik dokümantasyon hazırlanacak proje raporu oluşturulacak teslim süreci gerekli hazırlıklar tamamlanacak proje çıktıları detaylı şekilde sunuma uygun hale getirilecek bölüm 2 önceki çalişmalarin araştirilmasi bölümde intihal tespiti alanında yaygın olarak kullanılan çeşitli araçlar incelenmektedir araçların özellikleri avantajları dezavantajları kullanım alanları detaylı şekilde ele alınarak farklı ihtiyaçlara yönelik en uygun çözümlerin belirlenmesi amaçlanmaktadır inceleme hem ticari hem açık kaynaklı araçları kapsamakta özellikle çoka analizler gibi karmaşık senaryolar araçların yeterliliği değerlendirilmektedir 21 literatürdeki benzer çalışmalar intihal tespiti akademik profesyonel dünyada önemli konudur alanda farklı amaçlar geliştirilmiş çeşitli ticari açık kaynak araçlar mevcuttur özellikle çoka analizler grup ödevleri gibi karmaşık senaryolar tespit aracının kapsamlı özelliklere sahip olması gerekir aşağıda yaygın kullanılan intihal tespit araçlarının detaylı incelemesi sunulmuştur 211 ithenticate ithenticate bilimsel makaleler profesyonel yayınlar yüksek kaliteli akademik içerikler geliştirilen üst düzey intihal kontrol sistemidir yayınlanmış makaleler konferans bildirileri bilimsel veri tabanları gibi kaynakları tarayarak içeriklerin özgünlük durumunu yüksek doğrulukla analiz eder akademik yayınevleri araştırmacılar özel çözümler sunan ithenticate özellikle bilimsel makalelerin yayımlanmadan önceki orijinallik kontrollerinde kritik rol oynar kullanıcılarına sağladığı detaylı orijinallik raporları sayesinde içeriklerin güvenilirliğini artırır intihal riskini minimize eder ithenticate tezler bilimsel makaleler profesyonel yayınlar üzerinde çalışan araştırmacılar ideal araçtır platformlar arası iş birliğini destekleyen yapısı kullanıcı deneyimini güçlendirmektedir 3 httpswwwithenticatecom avantajları yüksek doğruluk bilimsel yayın desteği uluslararası standartlara uygun raporlama dezavantajları yüksek maliyet bireysel kullanıcılar uygun değil grup ödevleri çoka analizlerde yetersizlik kullanım alanları akademik yayınlar bilimsel makaleler yayınevleri 212 turnitin turnitin dünya çapında akademisyenler eğitim kurumları tarafından tercih edilen güvenilir intihal tespit platformudur geniş kapsamlı akademik veri tabanına sahip olan turnitin kullanıcıların içeriklerini kitaplar makaleler tezler diğer akademik çalışmalarla karşılaştırarak intihal oranını yüksek doğrulukla tespit edebilir turnitinin sunduğu en önemli özelliklerden biri orijinallik raporudur rapor belgelerde bulunan benzerlik oranlarını detaylı şekilde analiz ederek içeriklerin özgünlük seviyesini değerlendirmeye yardımcı olur ayrıca sistemin güçlü algoritmaları sayesinde özellikle akademik standartların korunmasına büyük katkı sağlanır üniversiteler akademisyenler araştırmacılar vazgeçilmez araç olan turnitin aynı zamanda akademik dürüstlük etik çalışmaların desteklenmesine önemli rol oynamaktadır 2 3 httpstrturnitincom avantajları geniş veri tabanı detaylı raporlama kullanıcı dostu arayüz dezavantajları yüksek maliyet çoka analiz eksikliği kullanım alanları akademik kurumlar üniversiteler okullar 213 plagscan plagscan düşük maliyetli açık kaynak intihal tespit aracıdır belirli düzeye kadar etkili çözüm sunmasına rağmen gelişmiş analiz gereksinimlerini karşılamada yetersizdir 3 httpswwwplagscancom avantajları düşük maliyetli lisans modeli çevrimdışı belgelerle karşılaştırma dezavantajları çoka analiz eksikliği veri tabanı kısıtlamaları kullanım alanları eğitim kurumları küçük işletmeler bireysel kullanıcılar 214 intihalnet intihalnet türkçe akademik çalışmalara odaklanmış yerli intihal tespit aracıdır türk üniversiteleri akademisyenler araştırmacılar tarafından yaygın şekilde kullanılan araç türkçe içeriklerin özgünlük kontrollerinde oldukça başarılıdır intihalnet akademik bilimsel raporlamalar kapsamlı tarama sistemi sunar kullanıcı dostu arayüzü sayesinde kolay kullanım deneyimi sağlar platform özellikle türkçe tezler makaleler diğer akademik çalışmalar üzerinde çalışan araştırmacılar idealdir türkçe kaynaklara erişim sağlama konusundaki başarısı intihalneti yerli akademik çalışmalar vazgeçilmez araç haline getirmiştir ayrıca kullanıcılara detaylı raporlar sunarak içeriklerin intihal oranını doğru şekilde analiz eder araştırma süreçlerinin verimliliğini artırır httpsintihalnet avantajları türkçe dil desteği kullanıcı dostu arayüz türkçe kaynaklara erişim detaylı raporlama dezavantajları dil desteği sınırlaması sadece türkçe veri tabanı kapsamının darlığı uluslararası kaynaklara sınırlı erişim çoka analiz eksikliği kullanım alanları türkiyedeki akademik kurumlar türkçe içerik üretenler 215 plagiarismchecker plagiarismchecker tamamen ücretsiz olması kullanımı kolay arayüzüyle bireysel kullanıcılar pratik intihal tespit aracıdır özellikle kısa metinlerin hızlı şekilde analiz edilmesine olanak tanıyan araç web tabanlı çalıştığı herhangi kurulum gerektirmez kopyala yapıştır yöntemiyle çalışan plagiarismchecker metinlerin temel düzeyde taranmasını sağlar kullanıcılarına kısa sürede sonuç sunar sağladığı temel raporlarla kullanıcıların içeriklerinin özgünlük durumunu anlamalarına yardımcı olur blog yazıları kısa makaleler ödevler gibi basit içeriklerde etkili şekilde çalışan araç karmaşık akademik metinler yerine küçük bireysel çalışmalar idealdir özellikle öğrenciler bireysel yazarlar arasında popülerdir 4 httpsplagiarismdetectornet avantajları tamamen ücretsiz kullanımı kolay arayüz hızlı analiz kurulum gerektirmemesi dezavantajları temel düzeyde tarama karmaşık analizlerde yetersizlik az kapsamlı veri tabanı kullanım alanları bireysel kullanıcılar öğrenciler blog yazarları kısa metinler tablo 21da çalışmaların birbirleriyle karşılaştırıldığı tablo verilmiştir tablo 2 araç karşılaştırma tablosu 22 mevcut çalışmaların karşılaştırılması eksikleri mevcut araçlar bire belge karşılaştırmasında etkili çözümler sunarken belgelerin birbirleriyle çoka eşleşme yöntemiyle analiz edilmesi gibi karmaşık ihtiyaçları karşılamakta yetersiz kalmaktadır özellikle sınıf düzeyinde yapılan grup ödevlerinde ya öğrencilerin aynı konu üzerinde çalıştığı bireysel ödevlerde belgeler arasındaki benzerliğin kapsamlı şekilde analiz edilmesi gerekmektedir ancak mevcut araçların çoğu tür gereksinimlere odaklanmamıştır 3 bölüm 3 yöntem tasarim bölümde projenin tasarım geliştirme süreci gereksinim analizinden sistem mimarisine metin analizi yöntemlerinden test süreçlerine kadar tüm detaylarıyla anlatılmaktadır riskler çözümleri beklenen faydalar ele alınmıştır 31 tasarım ihtiyaçları projenin başarılı şekilde hayata geçirilmesi çeşitli tasarım ihtiyaçları dikkate alınmıştır ihtiyaçlar kullanıcı deneyimini teknolojik altyapıyı maliyet etkinliğini sistem entegrasyonunu uyumluluğunu kapsamaktadır 311 kullanıcı ihtiyaç analizi sistemin temel amacı ödev proje diğer akademik içeriklerin özgünlüğünü analiz etmektir nedenle kullanıcı odaklı tasarım yaklaşımı benimsenmiştir kullanıcı ihtiyaç analizi sonucunda aşağıdaki gereksinimler belirlenmiştir kullanıcı dostu arayüz sistem seviyedeki kullanıcının kolayca anlayabileceği kullanabileceği sezgisel arayüze sahip olmalıdır karmaşık menülerden teknik terimlerden kaçınılarak basit anlaşılır dil kullanılmalıdır belge yükleme yönetimi kullanıcılar farklı formatlardaki belgelerini örneğin pdf doc docx kolayca yükleyebilmeli yönetebilmelidir yükleme süreci hızlı güvenli olmalıdır karşılaştırma başlatma kullanıcılar yükledikleri belgeler arasında karşılaştırma işlemini basit şekilde başlatabilmelidir gerekirse karşılaştırma parametrelerini örneğin benzerlik eşiği ayarlayabilmelidir detaylı raporlar sistem analiz sonuçlarını detaylı anlaşılır raporlar halinde sunmalıdır raporlar benzerlik oranlarını eşleşen metin bölümlerini diğer ilgili bilgileri içermelidir görselleştirmeler grafikler tablolar raporun anlaşılırlığını artırmalıdır görselleştirme analiz sonuçları grafikler tablolar aracılığıyla görselleştirilerek kullanıcıların veriyi kolay yorumlaması sağlanmalıdır benzerlik oranları eşleşen metin bölümleri diğer önemli veriler görsel olarak sunulmalıdır hızlı geri bildirim sistem analiz sonuçlarını mümkün olan en kısa sürede vermelidir uzun süren analizler kullanıcıya ilerleme durumu hakkında bilgi verilmelidir genel ihtiyaçların sistemdeki karşılıkları ilgili kullanıcı rolleri aşağıdaki şekil 31da gösterilmiştir şekil 3 kullanıcı ihtiyaç analizi 312 teknoloji gereksinimleri sistemin geliştirilmesinde performans ölçeklenebilirlik güvenlik kullanıcı deneyimi gibi faktörler göz önünde bulundurularak dizi teknoloji seçilmiştir kullanılan temel teknolojiler seçim nedenleri aşağıda detaylandırılmıştır ön yüz frontend vuejs kullanıcı etkileşimini yönetmek dinamik arayüz oluşturmak javascript tabanlı framework olan vuejs tercih edilmiştir arka yüz backend flask python api uç noktalarını oluşturmak veri işleme süreçlerini yönetmek veri tabanı iletişim kurmak python tabanlı hafif web frameworkü olan flask kullanılmıştır veri tabanı mssql yüklenen belgelerin analiz sonuçlarının kullanıcı bilgilerinin diğer verilerin güvenli verimli şekilde depolanması yönetilmesi microsoft sql server mssql veri tabanı kullanılmıştır api testi postman api uç noktalarının doğru çalıştığından beklenen yanıtları verdiğinden performans gereksinimlerini karşıladığından emin olmak postman kullanılmıştır programlama dili python metin karşılaştırma algoritmalarının geliştirilmesi veri analizi sonuçların görselleştirilmesi python programlama dili kullanılmıştır sistemin ana hatları aşağıda verilen şekil 32da istem mimarisinin genel görünümü diyagram sistem bileşenlerinin ön yüz arka yüz veri tabanı vb aralarındaki etkileşimin olduğunu göstermektedir şekil 3 sistem mimarisi 313 maliyet gereksinimleri projenin maliyet etkinliği önemli öncelik olarak belirlenmiş doğrultuda mümkün olduğunca açık kaynak teknolojiler tercih edilmiştir flask arka yüz vuejs ön yüz python ilgili kütüphaneler metin analizi gibi temel bileşenler açık kaynaklı ücretsizdir ancak mssql veri tabanı uygun lisanslama bütçesi ayrılması gerekmektedir mssqlin farklı sürümleri lisanslama seçenekleri bulunmaktadır 314 entegrasyon uyum gereksinimleri arayüz arka yüz iletişimi apilerin aracılığıyla sağlanacaktır postman test edilen apilerin entegrasyonu flask arka yüz yapısına vuejs ön yüz yapısına uygun şekilde yapılacaktır 32 tasarım kullanılacak sistem alt sistemler 321 ön yüz frontend vuejs vuejsin bileşen tabanlı yapısı kodun yeniden kullanılabilirliğini artırır geliştirme sürecini hızlandırır ayrıca performansı yüksektir zengin ekosisteme sahiptir tek sayfa uygulamaları spa geliştirmek idealdir kullanıcı deneyimini önemli ölçüde iyileştirir proje özelinde dosya yükleme analiz sonuçlarının görselleştirilmesi kullanıcı etkileşimlerinin yönetimi gibi modüller vuejs geliştirilecektir aşağıda şekil 33da yönlendirme mekanizmasından görsel verilmiştir 322 arka yüz backend flask python flaskın minimalist yapısı yüksek performans gerektiren uygulamalar uygundur esnek özelleştirilebilir yapısı sayesinde projenin özel ihtiyaçlarına göre kolayca adapte edilebilir pythonun güçlü kütüphaneleriyle örneğin metin işleme veri analizi entegrasyonu kolaydır proje dosya yükleme analiz başlatma sonuçları veri tabanından alma ön yüze gönderme gibi işlemler flask yönetilecektir 323 veri tabanı mssql mssql proje kapsamında yüksek performanslı veri depolama işleme ihtiyaçlarını karşılamak seçilmiştir veri tabanı yüklenen belgeleri karşılaştırma sonuçlarını kullanıcı erişim bilgilerini görselleştirme gerekli istatistikleri depolayacaktır tablolar normalize edilerek veri tutarlılığı sağlanacak karmaşık sorgular indeksleme yapılacaktır 324 postman api testi postman api geliştirme test süreçlerini kolaylaştıran güçlü araçtır api istekleri gönderme yanıtları inceleme test senaryoları oluşturma otomatik testler çalıştırma gibi özellikleri sunar proje farklı senaryolar altında apilerin doğruluğunu performansını güvenliğini test etmek postman kullanılacaktır 325 python veri işleme python zengin kütüphane ekosistemi nltk spacy scikitlearn matplotlib seaborn plotly vb sayesinde metin işleme doğal dil işleme nlp makine öğrenimi veri görselleştirme gibi alanlarda yaygın olarak kullanılan dildir 326 benzerlik analizi algoritmalarının çalışma prensipleri kullanım senaryoları metin benzerliği analizi doğal dil işleme nlp metin madenciliği alanlarında önemli yer tutmaktadır farklı metinler arasındaki benzerlikleri tespit etmek metin sınıflandırma intihal tespiti arama motoru optimizasyonu içerik öneri sistemleri gibi birçok uygulama gereklidir aşağıda en yaygın kullanılan metin benzerliği algoritmalarının çalışma prensipleri kullanım senaryoları açıklanmaktadır cosine similarity cosine benzerliği metinleri vektörler olarak temsil edip vektörler arasındaki açıyı cosine hesaplayarak benzerliği ölçen yöntemdir vektörler metnin içerdiği kelimelerin sıklıkları temsil edilir cosine benzerliği iki metnin yönlerinin birbirine kadar yakın olduğunu veya paralel olduğunu ölçer benzerliği 1 1 arasında değerle ifade eder cosine similarity belge benzerliği doküman sıralama gibi uygulamalar son derece etkilidir eposta sınıflandırma web arama motorları öneri sistemleri metin madenciliği gibi uygulamalarda büyük veri çalışırken yüksek verimlilik sağlar ayrıca uzun metinler anlamlı benzerlikler üzerine odaklanmak gerektiğinde doğru sonuçlar verir yüksek boyutlu veri setlerinde başarılı performans sergileyen algoritmadır 5 mongeelkan mongeelkan algoritması metin benzerliklerini ölçmek kullanılan güçlü esnek yöntemdir algoritma özellikle farklı şekillerde ifade edilen veya yazım hataları içeren kısa metinlerin karşılaştırılmasında etkili sonuçlar verir mongeelkan iki metindeki kelimeyi diğer metindeki tüm kelimelerle eşleştirir eşleşmelerin benzerlik skorlarını hesaplar süreçte genellikle başka string benzerlik algoritması örneğin levenshtein mesafesi veya jarowinkler alt algoritma olarak kullanılır kelime en yüksek benzerlik skoru seçilir tüm skorların ortalaması alınarak iki metin arasındaki genel benzerlik değeri elde edilir algoritmanın en belirgin avantajı küçük yazım hatalarına veya eşanlamlı ifadelerin varlığına karşı toleranslı olmasıdır mongeelkan birebir eşleşme aramak yerine en yüksek benzerliği seçerek metinler arasındaki anlam bütünlüğünü korur özellikle müşteri veritabanı eşleştirme adres karşılaştırma kısa metinli doğal dil işleme gibi uygulamalarda yaygın olarak kullanılır bununla birlikte mongeelkan algoritmasının kullanımında dikkat edilmesi gereken bazı noktalar vardır kullanılan alt algoritmanın seçimi sonuçların doğruluğu üzerinde doğrudan etkilidir örneğin levenshtein mesafesi yazım hatalarına karşı hassasken jarowinkler algoritması kısa metinler üzerinde etkili çalışabilir nedenle mongeelkanın en uygun sonuçları vermesi veri türüne karşılaştırma senaryosuna uygun alt algoritma seçimi yapılmalıdır 6 jarowinkler similarity jarowinkler benzerliği özellikle kısa metinler adlar arasındaki benzerliği ölçmek tasarlanmış algoritmadır algoritma metinlerdeki karakter benzerliklerini değerlendirir küçük yazım hatalarına duyarlıdır jarowinkler kelimelerdeki karakter sırasındaki benzerliği yer değiştirmeleri dikkate alarak skor üretir algoritma uzun metinlerdeki benzerlikleri doğru tespit etmekte zorlanabilir ancak küçük farkları oldukça hassas şekilde belirleyebilir jarowinkler özellikle ad eşleştirme yazım hatası düzeltme telefon numarası adres doğrulama gibi uygulamalar etkilidir veri doğrulama spam filtreleme benzer adların tespiti gibi işlemler yaygın olarak tercih edilen algoritmadır 7 sorensendice coefficient sorensendice katsayısı iki metin arasındaki benzerliği ölçmek kullanılan diğer küme benzerlik algoritmasıdır katsayı iki metnin ortak kelimelerinin sayısının iki metnin toplam kelimeleri karşılaştırılmasıyla hesaplanır sorensendice katsayısı özellikle metinlerin ortak ögelerinin oranını belirlemek etkilidir sorensendice coefficient özellikle kısa metinlerde kelime kümesi benzerliği analizi kullanılır metinlerin karşılaştırılması belge öneri sistemleri etiketleme sistemlerinde başarılı sonuçlar elde etmek uygundur ayrıca metinler arasındaki küçük benzerlikleri tespit etmekte oldukça etkili algoritmadır algoritma farklı veri yapıları metin türleri kullanım senaryolarına göre değişik performanslar sergileyebilir nedenle doğru algoritmayı seçmek belirli kullanım durumu doğru sonuca ulaşabilmek adına son derece önemlidir örneğin tfidf genellikle büyük veri setlerinde metinlerin içerik benzerliğini analiz etmek mükemmel seçimken levenshtein mesafesi yazım hatası tespiti etkili olur cosine similarity uzun metinlerdeki anlamlı benzerlikleri tespit etmek ideal yöntemken jarowinkler algoritması kısa metinlerdeki yazım hatalarını doğru şekilde belirleyebilir 8 jaccard index jaccard benzerliği iki küme arasındaki ortak öğelerin oranını ölçer algoritma metinleri kelime kümeleri olarak kabul eder iki küme arasındaki benzerliği küme kesişimi birleşiminin oranı olarak hesaplar jaccard index genellikle kelimeler arasındaki ortaklıkları metinler arasındaki yapısal benzerlikleri değerlendiren metottur jaccard index özellikle kısa metinler kelime kümesi analizleri oldukça etkili algoritmadır metin madenciliği veritabanı sorgulama gibi alanlarda etiketleme doküman eşleştirme kümelenme clustering gibi işlemler yaygın şekilde kullanılır jaccard özellikle sosyal medya analizleri hashtag analizleri metin analizi gibi ortamlarda metinlerin içerik benzerliklerini iyi anlamak faydalıdır 9 tfidf term frequencyinverse document frequency tfidf kelimenin belirli metin veya belge içinde kadar önemli olduğunu belirlemek kullanılan istatistiksel yöntemdir iki temel bileşenden oluşur term frequency tf kelimenin metin içindeki sıklığını ölçerken inverse document frequency idf kelimenin tüm belgelerde kadar yaygın olduğunu değerlendiren parametredir iki bileşen birleştirilerek kelimenin metin içindeki gerçek önem derecesi hesaplanır yüksek tfidf değeri kelimenin sadece belirli metinde sıkça geçtiğini değil aynı zamanda o metinde özgün anlamlı yere sahip olduğunu gösterir tfidf özellikle büyük veri setlerinde metin madenciliği içerik analizi gibi uygulamalarda yaygın olarak kullanılır arama motorları doküman sınıflandırma belge öneri sistemleri gibi alanlarda oldukça etkilidir yöntem metinlerin içeriğine dair önemli kelimeleri çıkarmada oldukça başarılıdır ayrıca algoritma sık kullanılan kelimelerin veya durak kelimelerin stop words metin analizi üzerinde olumsuz etkisi olmasını engeller 10 şekil 33da tfidf formülü görselleştirilmiştir şekil 3 tfidf formülü levenshtein distance levenshtein distance iki metin arasında yapılan değişiklikleri ekleme silme değiştirme ölçer yöntem metinlerin harf düzeyinde kadar farklı olduğunu değerlendirmek kullanılabilir 11 aşağıdaki denklem 31 şekil 34da formül örnek verilmiştir denklem 31 levenshtein distance formülü şekil 3 levenshtein distance örneği algoritmaların karşılaştırılması farklı metin benzerliği algoritmalarının performansını karşılaştırmak hangi algoritmanın belirli uygulama en uygun olduğunu belirlemek açısından büyük önem taşır bölümde tfidf jaccard index cosine similarity jarowinkler similarity sorensendice coefficient algoritmalarının metinler üzerinde benzerlik oranı tespit edilmiştir ayrıca test aşamasında farklı metinler kullanılarak hangi algoritmaların hangi tür metin verileri kullanım senaryoları etkili olduğunu tespit edilmiştir test aşamasında kendi programımız kullanılmış sonuçlar aşağıda verilmiştir test 1 şekil 35 verilen test girdisi sonuçları şekil 36da gösterilmiştir şekil 3 test 1 girdisi şekil 3 test 1 sonucu test 2 şekil 37 verilen test girdisi sonuçları şekil 38da gösterilmiştir şekil 3 test 2 girdisi şekil 3 test 2 sonucu test 3 şekil 39 verilen test girdisi sonuçları şekil 310da gösterilmiştir şekil 3 test 3 girdisi şekil 3 test 3 sonucu 33 yöntem bölümde sistemin geliştirilmesinde izlenen yöntemler kullanılan teknolojiler uygulanan süreçler detaylandırılmaktadır sistem modüler yaklaşımla ön yüz arka yüz veri işleme veri tabanı katmanları olarak tasarlanmıştır 331 flask tabanlı arka yüz geliştirme sistemin arka yüzü python tabanlı hafif web frameworkü olan flask kullanılarak geliştirilmiştir flaskın esnek minimalist yapısı restful apiler oluşturmak uygun zemin sağlamıştır arka yüz geliştirme sürecinden aşağıdaki örnekler verilmiştir api uç noktaları aşağıda bazı api uç noktalarının görevleri aktarılmıştır post upload kullanıcıların dosyalarını sisteme yüklemesini sağlayan uç noktadır yüklenen dosyalar sunucuda güvenli dizine kaydedilir dosya meta verileri ad boyut yüklenme zamanı vb mssql veri tabanına kaydedilir post compare karşılaştırma işlemini başlatır uç nokta gerekli analiz parametrelerini alır analiz işlemini gerçekleştirmek üzere python modülüne yönlendirir get resultsanalysis_id belirli analiz idsine ait sonuçları döndüren uç noktadır sonuçlar veri tabanından alınarak uygun formatta json gibi ön yüze iletilir aşağıda şekil 311da flask uygulamasından uç noktaendpoint örnekleri verilmiştir şekil 3 flask endpoint güvenlik sistem güvenliği ön planda tutularak aşağıdaki önlemler alınmıştır dosya yükleme sırasında yalnızca izin verilen dosya türleri pdf doc docx kabul edilir olası güvenlik açıklarını en aza indirir kullanıcı kimlik doğrulaması jwt tabanlı mekanizma kullanılmıştır güvenli ölçeklenebilir kimlik doğrulama yöntemi sağlar performans yüksek performans sağlamak amacıyla aşağıdaki optimizasyonlar yapılmıştır veritabanı işlemlerini optimize etmek flasksqlalchemy orm kullanılmıştır veritabanı etkileşimlerini verimli hale getirir 332 python metin analizi metin tabanlı analiz işlemleri python ilgili kütüphaneler kullanılmıştır analiz süreci adımları içerir ön işleme metin analizi verilerin hazırlanması amacıyla aşağıdaki işlemler gerçekleştirilir belgelerden metin çıkarma işlemi pypdf2 pythondocx kütüphaneleri kullanılmıştır çıkarılan metinler gereksiz kısımların kapak sayfası özet içindekiler vb filtrelenmesi önceden tanımlanmış anahtar kelimelerle analiz edilir doğal dil işleme nlp teknikleri uygulanarak nltk spacy kütüphaneleri durak kelimeler stop words temizlenir metin tokenizasyonu yapılır benzerlik analizi belgeler arasındaki benzerliği ölçmek tfidf term frequencyinverse document frequency levenshtein distance jaccard index cosine similarity algoritmaları kullanılmıştır algoritmalar belgelerin farklı yönlerden benzerliğini değerlendirmek birlikte veya ayrı ayrı kullanılabilir elde edilen sonuçlar eşleşen bölümlerin satır paragraf bazında detaylı analizini içeren yapıda raporlanır sonuçların raporlanması analiz sonuçları python veri görselleştirme kütüphaneleri matplotlib seaborn plotly kullanılarak anlamlı okunabilir raporlar haline getirilir veri tabanında saklanır sonuçlar flask api aracılığıyla ön yüze iletilerek kullanıcılara sunulur 333 mssql tabanlı veri depolama verilerin kalıcı olarak saklanması etkin şekilde yönetilmesi microsoft sql server mssql veritabanı kullanılmıştır veritabanı şeması aşağıdaki tabloları içerir kullanıcılar sistem kullanıcılarının kimlik bilgileri yetkilendirme bilgileri tabloda saklanır yüklenen dosyalar yüklenen dosyaların meta verileri dosya adı boyutu yükleme tarihi kullanıcı idsi vb tabloda tutulur analiz sonuçları analiz işlemine ait benzerlik oranları eşleşen bölümler diğer ilgili veriler benzersiz analiz idsi ilişkilendirilerek tabloda saklanır şekil 312da veri tabanı diyagramı gösterilmiştir şekil 3 veri tabanı tablosu veritabanı performansını optimize etmek aşağıdaki teknikler kullanılmıştır sık kullanılan sorgularda performansı artırmak uygun indeksler oluşturulmuştur karmaşık sorguların performansını artırmak veritabanı sunucusundaki yükü azaltmak saklı yordamlar stored procedures kullanılmıştır 334 vuejs frontend geliştirme kullanıcı dostu etkileşimli arayüz oluşturmak vuejs frameworkü kullanılmıştır ön yüz geliştirme sürecinde aşağıdaki özellikler uygulanmıştır dosya yükleme kullanıcıların dosyalarını kolayca yükleyebileceği yükleme durumunu gerçek zamanlı olarak gösteren hata mesajları doğrulama adımlarını içeren modül tasarlanmıştır sonuç görselleştirme analiz sonuçları dinamik grafikler tablolar vurgulanmış eşleşen metin bölümleri görselleştirilerek kullanıcıların sonuçları kolay anlaması sağlanmıştır api entegrasyonu arka yüz iletişim kurmak verileri almak axios kütüphanesi kullanılmıştır aşağıda şekil 313da yönlendirme mekanizmasından görsel verilmiştir şekil 3 vuejs yönlendirme 335 entegrasyon test süreçleri sistemin tüm bileşenlerinin sorunsuz şekilde entegre olduğunu doğru çalıştığını doğrulamak kapsamlı test süreçleri uygulanmıştır süreçler şunlardır api testleri postman kullanılarak api uç noktasının doğruluğu performansı hata durumları test edilmiştir aşağıda şekil 314da api üzerinden gelen json verilerinin kontrolü gösterilmiştir şekil 3 postman api kontrolü veritabanı testleri veri tabanına yapılan veri yazma okuma işlemlerinin doğruluğu performansı test edilmiştir kullanıcı testleri gerçek kullanıcı senaryolarını simüle etmek kullanıcı deneyimini değerlendirmek test kullanıcıları testler yapılmıştır testler dosya yükleme analiz başlatma sonuç raporlama süreçlerini kapsamaktadır 34 süreç veri akış diyagramları sistemin işleyişini veri akışını iyi görselleştirmek iki farklı akış şeması kullanılmaktadır bunlar sistemin genel akışını metin analizi süreçlerinin detaylarını göstermektedir 341 sistem genel akış diyagramı sistemimizin genel mimarisi şekil 32da gösterilmiştir ilgili şekilde numaralandırılan işlemler aşağıdaki şekil 315da dosya yükleme sürecinden rapor görüntüleme sürecine kadar sistemdeki ana adımları göstermektedir şekil 3 sistem genel akış diyagramı 342 metin işleme akış diyagramı aşağıda şekil 316da metin ön işleme adımlarını temizleme tokenizasyon vb algoritmalarının uygulandığını detaylı şekilde göstermektedir şekil 3 metin ön işleme şeması 343 karşılaştırma akış diyagramı karşılaştırma algoritmalarının uygulandığı şekil 317da gösterilmiştir şekil 3 karşılaştırma şeması 35 tasarım öngörülen bütçe hesabı tablo 3 tasarım öngörülen bütçe tablosu tablo 31da tasarım öngörülen bütçe hesabına ait veriler yer almaktadır 36 analizler bölümde geliştirilen sistemin uygulanması sırasında karşılaşılabilecek olası sorunlar sorunların çözümüne yönelik öneriler detaylı olarak ele alınmıştır ayrıca sistemin etkili verimli şekilde çalışmasını sağlamak amacıyla risk analizi mühendislik analizi yapılmıştır 361 risk analizi geliştirilen sistemin farklı aşamalarında çeşitli riskler tespit edilmiştir risklerin minimize edilmesi sistemin güvenilirliği verimliliği açısından önemlidir 3611 veritabanı bütünlüğü tutarlılık riskleri risk dosyaların meta verilerinin dosya adı boyutu yükleme tarihi vb veya analiz sonuçlarının veri tabanına yanlış veya tutarsız şekilde kaydedilmesi hatalı raporlamaya veri kaybına veya sistemin genel kararlılığının bozulmasına olabilir veri tekrarları eksik veriler veya yanlış ilişkiler gibi çeşitli şekillerde ortaya çıkabilir çözüm veritabanı bütünlüğünü tutarlılığını sağlamak aşağıdaki önlemler alınmıştır veritabanı kısıtlamaları constraints veritabanı şemasında uygun kısıtlamalar örneğin birincil anahtarlar yabancı anahtarlar benzersiz kısıtlamalar boş olmama kısıtlamaları tanımlanarak veri tutarlılığı zorlanmıştır yanlış veri girişlerini engeller veri bütünlüğünü korur işlemsel bütünlük transactional integrity veritabanı işlemleri atomik tutarlı izole dayanıklı acid özelliklerini sağlayan işlemler transactions içinde gerçekleştirilir sayede işlem tamamlanamazsa veritabanı önceki tutarlı durumuna geri döner veri tutarsızlıkları önlenir örneğin dosya yükleme işlemi sırasında hem dosya meta verileri hem analiz sonuçları aynı işlem içinde kaydedilir işlemin herhangi aşamasında hata oluşursa hiçbir veri kaydedilmez veri doğrulama temizleme düzenli olarak veri doğrulama temizleme işlemleri gerçekleştirilir işlemler veri tabanındaki verilerin tutarlılığını doğruluğunu kontrol eder hatalı veya tutarsız verileri düzeltir veritabanı yedekleme geri yükleme veri kaybını önlemek düzenli olarak veritabanı yedekleri alınır gerekli durumlarda veritabanı önceki yedekten geri yüklenebilir hata yönetimi exception handling uygulama kodunda veritabanı etkileşimleri sırasında oluşabilecek istisnaları exceptions yakalamak uygun şekilde işlemek tryexcept blokları veya benzer hata işleme mekanizmaları kullanılır 3612 performans sorunları risk büyük boyutlu dosyaların eşzamanlı olarak yüklenmesi analiz edilmesi sunucu kaynaklarını aşırı yükleyerek sistem performansını olumsuz etkileyebilir yanıt sürelerini uzatabilir hatta sistemin çökmesine olabilir çözüm performansı artırmak sistemin ölçeklenebilirliğini sağlamak aşağıdaki stratejiler uygulanmıştır çoklu iş parçacığıçoklu süreç multithreadingmultiprocessing dosya işleme analiz işlemleri eşzamanlı olarak birden fazla iş parçacığı veya süreç üzerinde çalıştırılarak paralel hale getirilmiştir işlem hızını artırır sunucu kaynaklarının verimli kullanılmasını sağlar asenkron işlemler asynchronous operations uzun süren işlemler örneğin analiz işlemleri asenkron olarak gerçekleştirilir ana uygulamanın bloke olmasını engeller kullanıcı arayüzünün yanıt vermeye devam etmesini sağlar yük dengeleme load balancing birden fazla sunucu kullanılıyorsa yük dengeleme mekanizmaları gelen istekler sunucular arasında eşit olarak dağıtılır tek sunucu üzerindeki yükü azaltır sistem performansını iyileştirir veritabanı optimizasyonu veritabanı sorguları indeksleri optimize edilerek veritabanı işlemlerinin performansı artırılmıştır önbellekleme caching sık erişilen veriler önbellekte saklanarak veri tabanına yapılan gereksiz erişimler azaltılmıştır 3613 kullanıcı hataları risk kullanıcıların desteklenmeyen dosya formatlarını yüklemesi yanlış parametrelerle analiz başlatması veya diğer hatalı girişler yapması beklenmeyen sistem davranışlarına hatalara veya güvenlik açıklarına yol açabilir çözüm kullanıcı hatalarını önlemek sistemin güvenliğini artırmak aşağıdaki önlemler alınmıştır giriş doğrulama input validation kullanıcı girişleri dosya formatları analiz parametreleri vb sunucu tarafında kapsamlı şekilde doğrulanır desteklenmeyen formatlar veya geçersiz parametreler tespit edildiğinde kullanıcıya açıklayıcı hata mesajları gösterilir kullanıcı arayüzü ui kılavuzluğu kullanıcı arayüzü kullanıcıları doğru işlemleri yapmaya yönlendirecek şekilde tasarlanmıştır açık etiketler ipuçları rehberlik mesajları kullanılarak kullanıcı hataları en aza indirilmeye çalışılır 362 mühendislik analizi projenin başarılı şekilde tamamlanması kapsamlı mühendislik analizi gerçekleştirilmiştir analizler projenin teknik gereksinimlerini mimarisini test stratejilerini entegrasyon planlarını kapsayarak geliştirme sürecinin sağlam temel üzerine oturtulmasını olası teknik sorunların önlenmesini hedefler 3621 gereksinim analizi yönetimi paydaşlarla yapılan görüşmeler doküman incelemeleriyle detaylı gereksinimler toplanmış fonksiyonel fonksiyonel olmayan gereksinimler olarak sınıflandırılmıştır gereksinimlerin izlenebilirliği değişiklik yönetimi uygun araçlar kullanılarak belirsizliklerin önüne geçilmiş net proje kapsamı oluşturulmuştur 3622 sistem mimarisi tasarımı gereksinimler doğrultusunda sistemin genel mimarisi temel bileşenleri tasarlanmıştır modüler yaklaşım benimsenerek sistemin farklı parçalarının bağımsız geliştirilmesi bakımı kolaylaştırılmıştır performans güvenlik ölçeklenebilirlik gereksinimlerini karşılayacak teknolojiler seçilmiş mimarinin doğruluğu uzman incelemeleri prototiplerle teyit edilmiştir 3623 test stratejisi planlaması sistemin kalitesini güvenilirliğini artırmak kapsamlı test stratejisi oluşturulmuştur farklı test seviyeleri türleri belirlenmiş gereksinimlere göre test senaryoları hazırlanmış test otomasyon araçları seçilmiştir sayede hataların erken tespiti projenin genel kalitesinin artırılması hedeflenmiştir 3624 entegrasyon stratejisi sistemin farklı bileşenlerinin harici sistemlerle sorunsuz entegrasyonu strateji geliştirilmiştir entegrasyon arayüzleri net şekilde tanımlanmış entegrasyon testleri erken aşamalarda başlatılmıştır entegrasyon sorunlarını en aza indirerek sistemin stabil çalışmasını sağlamayı amaçlar 3625 konfigürasyon yönetimi proje boyunca üretilen tüm çıktıların düzenli saklanması versiyonlanması yönetimi etkili konfigürasyon yönetimi stratejisi uygulanmıştır versiyon kontrol sistemi git kullanılarak proje dosyalarının takibi sağlanmış yapılandırma dosyaları dağıtım süreçleri standartlaştırılmıştır bölüm 4 bulgular bölümde geliştirilen sistemin test edilmesiyle elde edilen bulgular gözlemler özetlenmiştir sistem farklı senaryolarda denenmiş aşağıdaki sonuçlara ulaşılmıştır 41 zaman kazanımı sistemin manuel yöntemlere kıyasla analiz sürelerini önemli ölçüde azalttığı gözlemlenmiştir örneğin manuel olarak 1520 dakika sürebilen analiz işlemi sistem sayesinde ortalama 10 saniyede tamamlanabilmiştir birden fazla belgenin karşılaştırılması gereken senaryolarda toplam süre manuel yöntemlere göre 85 oranında azalmıştır 42 doğruluk sistem belgeler arasındaki benzerlikleri tespit etme konusunda genel olarak tatmin edici performans sergilemiştir test edilen 500 çift belge üzerinde yapılan analizlerde sistemin doğruluk oranı 92 olarak hesaplanmıştır özellikle metinlerde birebir eşleşen cümlelerde başarı oranı 98 iken yeniden yazılmış karmaşık cümlelerde oran 85 seviyesinde kalmıştır 43 sistem performansı api uç noktalarının yanıt sürelerinin çoğu durumda makul seviyelerde olduğu gözlemlenmiştir ortalama yanıt süreleri 200300 ms aralığında seyretmiş en yoğun kullanım anlarında bile süre 1 saniyeyi aşmamıştır ancak 100 mbden büyük dosyaların işlenmesi sırasında 10 oranında ek gecikmeler gözlemlenmiştir 44 kullanıcı deneyimi arayüz testlere katılan 50 kullanıcıdan 92si tarafından kolay anlaşılır kullanışlı bulunmuştur analiz sonuçlarının tablolar grafiklerle görselleştirilmesi kullanıcıların sonuçları anlamasına büyük katkı sağlamıştır bununla birlikte 8lik kullanıcı grubu bazı fonksiyonların aşamalı yapısı nedeniyle fazla yardım dokümanına ihtiyaç duyduklarını belirtmiştir 45 genel değerlendirme sistem hedeflenen işlevselliği büyük oranda karşılamış kullanıcıların ihtiyaçlarını genel olarak tatmin edici şekilde karşılayabilmiştir testlerden elde edilen verilere göre sistem 88 oranında genel başarı sağlamıştır bununla birlikte uygulama sırasında tespit edilen iyileştirme alanları büyük dosya işleme süreleri belirli yeniden yazılmış metinlerdeki analiz hassasiyeti gelecekteki geliştirme aşamalarında ele alınabilir bölüm 5 tartişma sonuç bölümde geliştirilen sistemin sağladığı avantajlar hedeflere ulaşma durumu karşılaşılan zorluklar sistemin güçlü yönleri tartışılmış ayrıca projenin genel başarısı gelecekteki çalışmalar öneriler sunulmuştur 51 tartışma geliştirilen sistem akademik belgeler arasındaki benzerliklerin tespit edilmesine yönelik önemli çözüm sunmuştur sistemin sunduğu hız doğruluk kullanım kolaylığı gibi avantajlar mevcut manuel yöntemlere kıyasla belirgin iyileştirmeler sağlamıştır hedeflerin karşılanması proje başında belirlenen hedefler büyük ölçüde karşılanmış sistem dosyaların karşılaştırılması detaylı raporların sunulması gibi temel işlemleri başarıyla yerine getirmiştir sistem özellikle birebir eşleşen metinlerin doğruluğunu 98 yeniden yazılmış metinlerin tespitini 85 oranında başarıyla tamamlamıştır karşılaşılan zorluklar büyük boyutlu veya kompleks yapıdaki dosyaların işlenmesi sırasında performans kaybı yaşanmış yanıt sürelerinde 10a kadar uzamalar gözlemlenmiştir ayrıca metin madenciliği algoritmaları bazı karmaşık ifadeleri veya yeniden yazımları tam olarak tespit edememiştir kullanıcı deneyimi açısından özellikle analiz sırasında kullanıcı geri bildirimlerinin yetersiz kaldığı durumlar tespit edilmiştir sistemin güçlü yönleri sistem sayıda belgenin aynı anda karşılaştırılmasına olanak tanıyarak grup çalışmaları önemli kolaylık sağlamıştır ayrıca sonuçların tablolar grafiklerle görselleştirilmesi analizlerin hızlı anlaşılır hale gelmesine katkı sağlamıştır testlere katılan kullanıcıların 92si sistemin genel işlevselliğinden memnun kaldıklarını belirtmiştir 52 sonuç proje kapsamında geliştirilen sistem akademik belgelerde benzerlik analizini gerçekleştirme konusunda etkili kullanışlı araç olarak değerlendirilmiştir sistemin kullanımı özellikle eğitim kurumlarında grup ödevleri projelerin değerlendirilmesinde zaman emek tasarrufu sağlamıştır elde edilen başarılar belgelerin birbiriyle çoka eşleşme yöntemiyle analiz edilmesi detaylı kullanıcı dostu raporların oluşturulması açık kaynak teknolojilerin kullanımı sayesinde sistem maliyetlerinin düşürülmesi sağlanmıştır gelecekteki çalışmalar sistemin gelecekte büyük veri kümesi farklı dosya türlerine uyarlanabilir hale getirilmesi yeniden yazım karmaşık ifadelerin tespitinde gelişmiş doğal dil işleme tekniklerinin entegrasyonu arayüz rehberliğinin artırılması gizlilik önlemlerinin güçlendirilmesi hedeflenmektedir sonuç olarak geliştirilen sistem mevcut haliyle kullanıcılara değerli araç sunarken gelecekteki iyileştirme geliştirme çalışmalarıyla geniş kullanım alanına hitap etme potansiyeli taşımaktadır kaynaklar 1 e uzun t karakuş e kurşun and h karaaslan öğrenci gözüyle aşırma intihal çözüm önerileri akademik bilişim07 ix akademik bilişim konferansı bildirileri dumlupınar üniversitesi kütahya türkiye jan 31feb 2 2007 pp 183190 2 s a meo and m talha turnitin is it a text matching ör plagiarism detection tool saudi journal of anaesthesia vol 13 suppl 1 pp s48s51 apr 2019 doi 104103sjasja_772_18 3 ia condurache and s d bolboacă comparison of plagiarism detection performance between some commercial and free software appl med inform vol 44 no 2 pp 7386 jun 2022 4 s g k chikkam plagiarism checker all capstone projects spring 2023 5 d gunawan c a sembiring and m a budiman the implementation of cosine similarity to calculate text relevance between two documents journal of physics conference series vol 978 no 1 p 012120 2018 doi 101088174265969781012120 6 m del pilar angeles and a espinogamez comparison of methods hamming distance jaro and mongeelkan dbkda 2015 the seventh international conference on advances in databases knowledge and data applications graphsm 2015 the second international workshop on largescale graph storage and management rome italy may 2429 2015 isbn 9781612084084 7 s c cahyono comparison of document similarity measurements in scientific writing using jarowinkler distance method and paragraph vector method iop conference series materials science and engineering vol 662 no 5 pp 052016 2019 doi 1010881757899x6625052016 8 x li c wang x zhang and w sun generic sao similarity measure via extended sørensendice index in ieee access vol 8 pp 6653866552 2020 doi 101109access20202984024 9 l fontoura costa further generalizations of the jaccard index sao carlos institute of physics dfcmusp oct 10 2021 10 a aizawa an informationtheoretic perspective of tfidf measures national institute of informatics tokyo japan aug 4 2001 accepted jan 4 2002 11 s zhang y hu and g bian research on string similarity algorithm based on levenshtein distance 2017 ieee 2nd advanced information technology electronic and automation control conference iaeac chongqing china 2017 pp 22472251 doi 101109iaeac20178054419 standartlar kisitlar formu çalışmanın amacını özetleyiniz çalışmanın amacı akademik belgeler arasında benzerlik analizlerini gerçekleştiren çoka eşleştirme yapabilen kullanıcı dostu eğitim odaklı yazılım sistemi geliştirmektir sistem belgelerin benzerlik oranlarını detaylı raporlarla sunarak intihal tespit sürecini kolaylaştırmayı hedeflemektedir çalışmanın tasarım boyutunu açıklayınız proje tamamen yeni çalışmadır çalışmanın tasarımı proje toplamının 100ünü oluşturmaktadır başlangıçtan son aşamaya kadar tüm süreç gereksinim analizi tasarım geliştirme test raporlama çalışmaya özgü olarak gerçekleştirilmiştir çalışmada mühendislik problemini kendiniz formüle edip çözdünüz mü evet akademik belgelerin benzerlik analizini gerçekleştiren mevcut ticari yazılımların yetersizlikleri çoka eşleştirme eksikliği yüksek maliyet tespit edilerek soruna yönelik uygun çözüm geliştirilmiştir örneğin grup ödevlerinde belgelerin birbiriyle kapsamlı analiz edilmesi sorununu çözmek özel algoritmalar kullanıcı dostu sistem geliştirilmiştir çalışmada kullandığınız yöntemler nelerdir önceki derslerde edindiğiniz hangi bilgi becerileri kullandınız açıklayınız çalışmada kullanılan yöntemler arasında doğal dil işleme nlp metin analizi algoritma tasarımı cosine similarity jaccard index levenshtein distance yazılım geliştirme flask vuejs veri tabanı tasarımı mssql yer almaktadır projede algoritma programlamaya giriş nesneye yönelik programlama veri yapıları algoritmalar veri tabanı yönetim sistemleri yapay zeka uygulamaları yapay öğrenmenin temelleri yazılım mühendisliği derslerinden edinilen bilgi beceriler kullanılmıştır derslerde kazanılan programlama temelleri python javascript veri tabanı yönetimi proje yönetimi doğal dil işleme teknikleri projede etkin şekilde uygulanmıştır kullandığınız veya dikkate aldığınız mühendislik standartları nelerdir isoiec 25010 yazılım ürün kalitesi ieee 1012 yazılım doğrulama geçerlilik isoiec 9126 yazılım mühendisliği ürün kalitesi ieee 829 yazılım test dokümantasyonu mühendislik standartları kullanılmıştır kullandığınız veya dikkate aldığınız gerçekçi kısıtlar nelerdir lütfen çalışmanıza uygun yanıtlarla doldurunuz ekonomi açık kaynak teknolojiler tercih edilerek maliyet azaltılmıştır ticari yazılımlara kıyasla düşük maliyetli çözüm sunulmuştur b çevre sorunları dijital çözüm olması kâğıt tüketimini azaltarak çevre dostu alternatif sağlamaktadır c sürdürülebilirlik sistem açık kaynak ölçeklenebilir mimarisiyle uzun vadeli kullanım uygundur d üretilebilirlik flask vuejs gibi yaygın kullanılan teknolojilerle geliştirildiği kolayca genişletilebilir sürdürülebilir e etik akademik etik değerleri desteklemek amacıyla intihalin önlenmesine yönelik sistem tasarlanmıştır f sağlık tasarım projesi sağlık ilgili herhangi alanla ilgilenmemektedir sağlık açısından sorun teşkil etmemektedir g güvenlik dosya yükleme kullanıcı kimlik doğrulama süreçlerinde güvenlik önlemleri örneğin jwt uygulanmıştır h sosyal politik sorunlar sistem akademik dürüstlüğü desteklemek adil değerlendirme süreçlerini teşvik etmek amacıyla tasarlanmıştır özgeçmiş hakan değer 13032002de kocaelide doğdu ilk orta lise eğitimini kocaelide tamamladı 2020 yılında 24 kasım anadolu lisesinden mezun oldu lise eğitiminin ardından 2020 yılında kocaeli üniversitesi makine mühendisliği bölümünü kazandı 2021 yılında merkezi yerleştirme puanı sakarya uygulamalı bilimler üniversitesi bilgisayar mühendisliği bölümüne yatay geçiş yaptı mesleki ilgi alanları arasında doğal dil işleme makine öğrenmesi mobil uygulama geliştirme yer almaktadır emre almamiş 08012001de muşta doğdu ilk orta lise eğitimini kocaelide tamamladı 2019 yılında muallim naci anadolu lisesinden mezun oldu lise eğitiminin ardından 2021 yılında sakarya uygulamalı bilimler üniversitesi bilgisayar mühendisliği bölümünü kazandı mesleki ilgi alanları arasında web mobil geliştirme yer almaktadır ismail selim inanir 28112003de sakaryada doğdu ilk öğretimini sakaryada tamamladı orta lise eğitimini tokatta tamamladı 2021 yılında özel ay işığı fen lisesinden mezun oldu lise eğitiminin ardından 2021 yılında sakarya uygulamalı bilimler üniversitesi bilgisayar mühendisliği bölümünü kazandı mesleki ilgi alanları arasında görüntü işleme doğal dil işleme mobil uygulama geliştirme yer almaktadır",
    "text2": "1turnitin turnitin dünya çapında akademisyenler eğitim kurumları tarafından tercih edilen güvenilir intihal tespit platformudur geniş kapsamlı akademik veri tabanına sahip olan turnitin kullanıcıların içeriklerini kitaplar makaleler tezler diğer akademik çalışmalarla karşılaştırarak intihal oranını yüksek doğrulukla tespit edebilir turnitinin sunduğu en önemli özelliklerden biri orijinallik raporudur rapor belgelerde bulunan benzerlik oranlarını detaylı şekilde analiz ederek içeriklerin özgünlük seviyesini değerlendirmeye yardımcı olur ayrıca sistemin güçlü algoritmaları sayesinde özellikle akademik standartların korunmasına büyük katkı sağlanır üniversiteler akademisyenler araştırmacılar vazgeçilmez araç olan turnitin aynı zamanda akademik dürüstlük etik çalışmaların desteklenmesine önemli rol oynamaktadır httpstrturnitincom adresinden ulaşabilirsiniz 2ithenticate ithenticate bilimsel makaleler profesyonel yayınlar yüksek kaliteli akademik içerikler geliştirilen üst düzey intihal kontrol sistemidir yayınlanmış makaleler konferans bildirileri bilimsel veri tabanları gibi kaynakları tarayarak içeriklerin özgünlük durumunu yüksek doğrulukla analiz eder akademik yayınevleri araştırmacılar özel çözümler sunan ithenticate özellikle bilimsel makalelerin yayımlanmadan önceki orijinallik kontrollerinde kritik rol oynar kullanıcılarına sağladığı detaylı orijinallik raporları sayesinde içeriklerin güvenilirliğini artırır intihal riskini minimize eder ithenticate tezler bilimsel makaleler profesyonel yayınlar üzerinde çalışan araştırmacılar ideal araçtır platformlar arası işbirliğini destekleyen yapısı kullanıcı deneyimini güçlendirmektedir httpswwwithenticatecom adresinden ulaşabilirsiniz 4intihalnet intihalnet türkçe akademik çalışmalara odaklanmış yerel kullanıcılar optimize edilmiş intihal tespit platformudur türk üniversiteleri akademisyenler araştırmacılar tarafından yaygın şekilde kullanılan araç türkçe içeriklerin özgünlük kontrollerinde oldukça başarılıdır intihalnet akademik bilimsel raporlamalar kapsamlı tarama sistemi sunar kullanıcı dostu arayüzü sayesinde kolay kullanım deneyimi sağlar platform özellikle türkçe tezler makaleler diğer akademik çalışmalar üzerinde çalışan araştırmacılar idealdir türkçe kaynaklara erişim sağlama konusundaki başarısı intihalneti yerli akademik çalışmalar vazgeçilmez araç haline getirmiştir ayrıca kullanıcılara detaylı raporlar sunarak içeriklerin intihal oranını doğru şekilde analiz eder araştırma süreçlerinin verimliliğini artırırhttpsintihalnet adresinden web sitesine ulaşabilirsiniz 3plagiarismchecker plagiarismchecker tamamen ücretsiz olması kullanımı kolay arayüzüyle bireysel kullanıcılar pratik intihal tespit aracıdır özellikle kısa metinlerin hızlı şekilde analiz edilmesine olanak tanıyan araç web tabanlı çalıştığı herhangi kurulum gerektirmez kopyala yapıştır yöntemiyle çalışan plagiarismchecker metinlerin temel düzeyde taranmasını sağlar kullanıcılarına kısa sürede sonuç sunar sağladığı temel raporlarla kullanıcıların içeriklerinin özgünlük durumunu anlamalarına yardımcı olur blog yazıları kısa makaleler ödevler gibi basit içeriklerde etkili şekilde çalışan araç karmaşık akademik metinler yerine küçük bireysel çalışmalar idealdir özellikle öğrenciler bireysel yazarlar arasında popülerdirhttpsplagiarismdetectornet adresinden web sitesine erişebilirsiniz 5plagiarisma plagiarisma 190dan fazla dili destekleyen hem çevrimiçi hem çevrimdışı kullanılabilen güçlü intihal tespit aracıdır web tabanlı platform olarak çalışmasının yanı sıra windows uygulamasıyla çevrimdışı tarama imkanı sunar google bing entegrasyonu sayesinde geniş web veri tabanını hızlı şekilde tarayarak içeriklerin orijinalliğini analiz eder pdf docx txt gibi farklı dosya formatlarını destekleyen plagiarisma dosya tabanlı çalışmalar üzerinde kolaylık sağlar çoklu dil desteği platformu uluslararası kullanıcılar uygun araç haline getirirken özellikle yazarlar öğrenciler akademisyenler tarafından tercih edilmektedir plagiarisma çeşitli disiplinlerde çalışan bireyler kapsamlı çözüm sunar hem akademik hem profesyonel içeriklerin özgünlüğünü korumaya yardımcı olur httpsplagiarismanettr adresinden web sitesine erişebilirsiniz intihal tespit araçları karşılaştırması",
    "raw_text1": "tc sakarya uygulamali bilimler üniversitesi teknoloji fakültesi bilgisayar mühendisliği bölümü akilli intihal önleme araçlari eğitim uygulama bilgisayar mühendisliği tasarımı raporu b210109370 hakan değer b210109029 emre almamiş b210109017 ismail selim inanir danışmanı dr öğr üyesi selman hizal ocak 2025 tc sakarya uygulamali bilimler üniversitesi teknoloji fakültesi bilgisayar mühendisliği bölümü akilli intihal önleme araçlari eğitim uygulama bilgisayar mühendisliği tasarımı raporu b210109370 hakan değer b210109029 emre almamiş b210109017 ismail selim inanir danışmanı dr öğr üyesi selman hizal rapor 2025 tarihinde aşağıdaki jüri tarafından oybirliği oyçokluğu kabul edilmiştir danışman üye üye beyan rapor içindeki tüm verilerin akademik kurallar çerçevesinde tarafımdan elde edildiğini görsel yazılı tüm bilgi sonuçların akademik etik kurallara uygun şekilde sunulduğunu kullanılan verilerde herhangi tahrifat yapılmadığını başkalarının eserlerinden yararlanılması durumunda bilimsel normlara uygun olarak atıfta bulunulduğunu raporda yer alan verilerin üniversite veya başka üniversitede herhangi çalışmada kullanılmadığını beyan ederim hakan değer emre almamiş ismail selim inanir 10012025 10012025 10012025 teşekkür lisans eğitimimiz boyunca değerli bilgi deneyimlerinden yararlandığımız konuda bilgi desteğini almaktan çekinmediğimiz araştırmanın planlanmasından yazılmasına kadar tüm aşamalarında yardımlarını esirgemeyen teşvik eden aynı titizlikte bizi yönlendiren değerli danışman hocamız dr öğr üyesi selman hizala teşekkürlerimizi sunarız simgeler kisaltmalar listesi api application programming interface mssql microsoft sql server nlp natural language processing pdf portable document format nltk natural language toolkit tfidf term frequencyinverse document frequency jwt json web token orm object relational mapping json javascript object notation acid atomicity consistency isolation durability sql structured query language şekiller listesi şekil 11 usecase diyagramı 5 şekil 12 admin paneli 5 şekil 13 öğretmen paneli 6 şekil 14 öğrenci paneli 6 şekil 31 kullanıcı ihtiyaç analizi 17 şekil 32 sistem mimarisi 19 şekil 33 tfidf formülü 24 şekil 34 levenshtein distance örneği 25 şekil 35 test 1 girdisi 26 şekil 36 test 1 sonucu 26 şekil 37 test 2 girdisi 27 şekil 38 test 2 sonucu 27 şekil 39 test 3 girdisi 27 şekil 310 test 3 sonucu 28 şekil 311 flask endpoint 29 şekil 312 veri tabanı tablosu 31 şekil 313 vuejs yönlendirme 32 şekil 314 postman api kontrolü 33 şekil 315 sistem genel akış diyagramı 34 şekil 316 metin ön işleme şeması 35 şekil 317 karşılaştırma şeması 35 tablolar listesi tablo 11 işzaman çizelgesi 8 tablo 21 araç karşılaştırma tablosu 14 tablo 31 tasarım öngörülen bütçe tablosu 35 özet anahtar kelimeler akademik intihal doğal dil işleme nlp cosine similarity vuejs flask mssql çalışmada akademik belgeler arasında benzerlik tespiti yapabilen çoka eşleştirme yöntemi çalışan kullanıcı dostu yazılım geliştirilmiştir proje mevcut ticari intihal araçlarının yetersizliklerini aşarak özellikle grup ödevleri projelerde detaylı analizler sunmayı amaçlamıştır geliştirilen sistem flask tabanlı arka yüz vuejs ön yüz mssql veri tabanı çeşitli metin analizi algoritmalarını cosine similarity jaccard index levenshtein distance içermektedir kullanıcılar farklı formatlardaki dosyaları sisteme yükleyerek analiz başlatabilmekte sonuçları detaylı görselleştirmeler değerlendirebilmektedir çalışma sırasında postman api testleri yapılmış elde edilen sonuçlar mssql veri tabanında saklanmıştır test sonuçlarına göre sistemin manuel yöntemlere kıyasla 85 zaman tasarrufu sağladığı doğruluk oranının 92 olduğu görülmüştür kullanıcı deneyimi testlerinden 92 oranında olumlu geri dönüş alınmıştır projenin çıktıları özellikle eğitim kurumlarında grup çalışmaları tez analizlerinde verimliliği artırarak akademik etik özgün düşünme becerilerinin teşvik edilmesine olanak sağlamıştır gelecekteki çalışmalarda büyük veri setleri optimizasyon gelişmiş doğal dil işleme tekniklerinin entegrasyonu hedeflenmektedir bölüm 1 giriş bölümde dijitalleşmenin etkileriyle birlikte akademik metinlerin orijinalliğini koruma ihtiyacından bağlamda geliştirilen projeden kısaca bahsedilecektir projenin amacı kapsamı özgün değeri intihalin önlenmesi süreci detaylandırılacaktır 11 genel bilgiler dijitalleşmenin hızla yaygınlaşması bilgiye erişimi kolaylaştırmış akademik çalışmalarda geniş bilgi havuzu sunmuştur ancak durum intihal riskini artırmış akademik etik ihlallerini önlemek yeni yöntemler geliştirilmesini gerekli kılmıştır 1 akademik metinlerin orijinalliğini korumak eğitim kurumlarının araştırmacıların en önemli hedeflerinden biridir intihali önlemek kullanılan teknolojik araçlar yalnızca bireysel haksızlıkları önlemekle kalmayıp öğrencilerin özgün düşünme becerilerini geliştirmeye katkı sunar proje akademik metinlerin birbiriyle benzerlik analizini yapan kullanıcı dostu eğitim odaklı araç geliştirmeyi amaçlamaktadır geliştirilecek sistem ödev tez proje gibi dosyaların sisteme yüklenerek birbirleriyle karşılaştırılmasını benzerlik oranlarının hesaplanmasını sağlayacaktır 12 akademik intihal tanımı etkileri korunma yolları dijital ortamların yaygınlaşması akademik çalışmalarda intihal riskini artırmıştır akademik etik ihlallerinin önlenmesi uygun yöntemlerin teknolojilerin geliştirilmesi büyük önem taşır özellikle grup çalışmaları gibi durumlarda ödevlerin benzerlik oranlarının öğretim görevlileri tarafından manuel olarak kontrol edilmesi zaman alıcı hatalara açık süreçtir durum etkili sistematik çözüm ihtiyacını doğurmuştur intihalin önlenmesi yalnızca bireysel etik hatalarını engellemekle kalmaz aynı zamanda öğrencilerin özgün düşünme yazma becerilerinin geliştirilmesine olanak tanır 13 problem tanımı akademik metinlerin orijinalliğini koruma amacıyla geliştirilen ticari intihal tespit araçları örneğin turnitin ithenticate genellikle bire karşılaştırmalar yapmaktadır geniş kullanıcı tabanı yüksek maliyetli çözümler sunmaktadır bunun sonucunda özellikle sınıf içi ödev veya tez çalışmaları gibi senaryolarda aynı öğrenci grubu içinde belgelerin birbiriyle olan benzerliğini tespit etmek eğitim kurumları karmaşık maliyetli süreç haline gelmektedir örneğin üniversite sınıfında yapay zekâ uygulamaları dersi kapsamında 30 öğrenciye aynı konu başlığı verilerek bireysel rapor hazırlamaları istenmiştir öğrenciler raporlarını teslim ettiğinde öğretim görevlisinin 30 raporu birbirleriyle karşılaştırarak benzerlik oranlarını manuel olarak kontrol etmesi gerekmektedir mevcut ticari yazılımlar genellikle tür çoka karşılaştırma gereksinimini desteklememekte öğretim görevlisi açısından zaman alıcı süreç doğurmaktadır ayrıca bazı raporların yalnızca belirli bölümlerinde yüksek düzeyde benzerlik bulunabileceği bölümlerin ayrıntılı şekilde tespit edilmesi gerekmektedir benzer şekilde tez çalışmaları veya grup projeleri gibi süreçlerde farklı ekipler arasında içerik paylaşımı ya intihal olup olmadığını tespit etmek mevcut araçların sınırlı işlevselliği nedeniyle zorluk yaratmaktadır örneğin tez çalışmasının literatür inceleme bölümü diğer tezle büyük ölçüde örtüşüyorsa durumun hangi bölümlerde gerçekleştiği manuel inceleme gerektirebilir projenin temel amacı tür eksiklikleri gidermek eğitim kurumlarının özel ihtiyaçlarına uygun kapsamlı intihal tespit sistemi sunmaktır sistem aynı grup içinde birden fazla belge arasında benzerlik tespitini mümkün kılarken kullanıcıların analiz sürecinde hangi bölümlerin benzerlik gösterdiğini detaylı raporlarla görmesini sağlayacaktır 14 projenin amacı özgün değeri projenin temel amacı akademik belgelerin birbiriyle benzerliklerini analiz eden intihal olasılığını değerlendiren yazılım geliştirmektir kapsamda geliştirilecek sistem metin tabanlı analiz yaklaşımını benimseyerek kullanıcıların dosya formatı sınırlamalarını ortadan kaldırmayı esnek çözüm sunmayı hedeflemektedir projenin özgün değeri mevcut intihal tespit araçlarının sınırlamalarını aşarak özellikle çoka analiz senaryolarında etkili kapsamlı çözüm sunmasında yatmaktadır literatürdeki mevcut araçlar genellikle bire karşılaştırmalara odaklanmış olup belgelerin birbirleriyle olan benzerliğini analiz etme konusunda eksik kalmaktadır proje kapsamında hedeflenen başlıca işlevler şunlardır belgeler arasında çoka eşleşme analizi projenin en önemli özelliklerinden biri sisteme yüklenen tüm metinlerin birbiriyle karşılaştırılmasını sağlamasıdır mevcut ticari yazılımların genellikle bire veya bire karşılaştırma yapabildiği göz önünde bulundurulduğunda sistem grup ödevleri tez çalışmaları veya birden fazla öğrencinin aynı konu üzerinde çalıştığı akademik projelerde kapsamlı değerlendirme imkânı sunar örneğin sınıfta teslim edilen tüm ödevler arasında çoka karşılaştırma yapılarak hangi belgelerin yüksek oranda benzerlik gösterdiği belirlenir bununla birlikte sistem yalnızca benzerlik oranlarını hesaplamakla kalmaz aynı zamanda hangi bölümlerin eşleştiğini ayrıntılı olarak gösterir durum öğretim görevlilerinin zamanını verimli kullanmasına olanak tanırken öğrenciler arasında yapılan iş birliğinin örneğin kaynak paylaşımı veya kopyalama sınırlarını net şekilde ortaya koyar sistem ayrıca benzerlik analizini gerçekleştirmek doğal dil işleme nlp tekniklerinden yararlanarak yalnızca yüzeysel eşleşmeleri değil anlam açısından örtüşen ifadeleri tespit eder detaylı raporlama görselleştirme kullanıcılar sistemin sunduğu detaylı raporlar görselleştirme araçları sayesinde metinler arasındaki benzerlik oranlarını eşleşen bölümleri kolayca değerlendirebilir görselleştirme özelliği eşleşen bölümlerin renk kodlamalarıyla vurgulanmasını farklı belgeler arasındaki bağlantıların grafiksel olarak gösterilmesini içerir örneğin iki metin arasında benzerlik tespit edildiğinde sistem benzerliği interaktif formatta kullanıcıya sunar eşleşen bölümler yan yana karşılaştırmalı olarak görüntülenebilir farklı belgeler arasındaki benzerlik oranları ısı haritası veya grafik üzerinde gösterilebilir görselleştirme araçları kullanıcıların raporlardan hızlı doğru sonuçlar çıkarmasını sağlar ayrıca raporların indirilebilir pdf formatında sunulması analiz geçmişine erişim imkânı uzun vadeli proje takibi açısından büyük kolaylık sağlar düşük maliyet açık kaynak yapı proje ticari yazılımlara alternatif olarak açık kaynaklı düşük maliyetli çözüm sunmayı hedeflemektedir özellik özellikle küçük ölçekli eğitim kurumları önemlidir eğitim odaklı yaklaşım intihali tespit etmenin ötesinde öğrencilere akademik etik bilincini aşılayarak özgün yazma alışkanlıklarını geliştirmelerine katkı sunacaktır sistem düşük maliyeti kullanıcı dostu arayüzü kapsamlı analiz kapasitesiyle hem bireysel hem kurumsal düzeyde intihal tespiti önlenmesi etkili araç olacaktır şekil 11 projenin usecase diyagramı gösterilmiştir şekil 1 usecase diyagramı aşağıda şekil 12 şekil 13 şekil 14da uygulamanın arayüzünden admin öğrenci öğretmen panellerinden görsellere yer verilmiştir şekil 1 admin paneli şekil 1 öğretmen paneli şekil 1 öğrenci paneli 15 projenin yaygın etkisi proje üniversitelerde diğer eğitim kurumlarında ödev proje tez gibi akademik çalışmaların değerlendirme süreçlerini verimli hale getirmeyi hedeflemektedir özellikle aynı sınıfta teslim edilen grup veya bireysel ödevlerin çoka eşleştirilerek analiz edilmesi intihal oranlarının azaltılmasında önemli rol oynayacaktır sistem akademik çalışmaların özgünlüğünü teşvik ederek hem öğrenciler hem öğretim üyeleri güvenilir ortam sağlayacaktır proje eğitim kurumlarının yanı sıra küçük orta ölçekli işletmeler kobiler araştırma merkezleri özel sektör kuruluşlarında kullanım potansiyeline sahiptir örneğin şirket içi raporların teknik dokümanların veya sunumların benzerlik analizi yapılabilir sayede fikirlerin özgünlüğü korunabilir sistem akademik etik bilincini desteklemekte öğrencilerin özgün içerik üretme becerilerini geliştirmelerine yardımcı olmaktadır durum uzun vadede nitelikli araştırmacıların etik değerleri benimsemiş bireylerin yetişmesine olanak tanır öğretim üyelerinin üzerindeki manuel kontrol yükünü azaltarak onların eğitim rehberlik faaliyetlerine fazla odaklanmalarını sağlar 16 standartlar çalışmada kullanılan standartlar aşağıda belirtilmiştir 161 isoiec 25010 software product quality requirements and evaluation square isoiec 25010 yazılım ürününün kalite özelliklerini basit uygulanabilir şekilde değerlendirmek kullanılan standarttır yazılımın işlevsellik performans kullanılabilirlik güvenilirlik taşınabilirlik gibi temel kriterleri göz önünde bulundurur proje kapsamında standarttan yalnızca en temel başlıklar örneğin işlevsellik kullanılabilirlik dikkate alınacaktır 162 ieee 1012 software verification and validation ieee 1012 yazılım doğrulama geçerliliği ilgili standarttır standart yazılımın belirtilen gereksinimlere uygun olup olmadığının doğrulanması son ürünün doğru işlevleri yerine getirdiğinin değerlendirilmesi gereklidir proje kapsamında standart dikkate alınacaktır 163 isoiec 9126 software engineering product quality isoiec 9126 yazılım ürünlerinin kalite özelliklerini tanımlar standart yazılımın işlevsellik kullanılabilirlik verimlilik güvenlik gibi özelliklerini değerlendirir proje kapsamında standart dikkate alınacaktır 164 ieee 829 software testing documentation ieee 829 yazılım test süreçlerinde kullanılabilecek basit belge formatı sunar proje kapsamında yazılımın test senaryoları hata kayıtları standarda uygun olarak dokümante edilecektir böylece test süreçleri sistematik şekilde gerçekleştirilecektir 17 işzaman çizelgesi tablo 1 işzaman çizelgesi tablo 11da işzaman çizelgesi görülmektedir iş paketlerinin içerikleri aşağıdaki gibidir iş paketi 1 proje hazırlığı planlama 1 ay literatür araştırması yapılarak mevcut intihal tespit araçları yöntemleri incelenecek teknik gereksinimler kullanılacak teknolojiler flask vuejs python altyapı ihtiyaçları belirlenecek proje planı iş paketleri detaylandırılacak iş paketi 2 veri tabanı tasarımı altyapı geliştirme 12 ay dosyalar kullanıcılar eşleşmeler gibi veri yapıları tanımlanarak veri tabanı şeması tasarlanacak flask framework kullanılarak temel api altyapısı oluşturulacak crud işlemleri geliştirilecek iş paketi 3 metin karşılaştırma motorunun geliştirilmesi 23 ay python metin karşılaştırma algoritması geliştirilecek istenmeyen kısımlar kapak sayfası içerik önsöz çıkarılacak metin analizi yöntemleri uygulanarak benzerlik oranları hesaplanacak eşleşen bölümler detaylı şekilde analiz edilecek iş paketi 4 arayüz geliştirme 24 ay vuejs kullanıcı giriş ekranı dosya yükleme rapor görüntüleme modülleri tasarlanacak kullanıcı deneyimi iyileştirilecek flask api entegrasyon sağlanacak kullanıcıların kolayca dosya yükleyip rapor alabilmesi gerekli altyapı tamamlanacak iş paketi 5 raporlama görselleştirme modülü 34 ay pythonda görselleştirme kütüphaneleri matplotlib plotly seaborn entegre edilerek metin benzerlik oranları grafiklerle görselleştirilecek elde edilen raporlar arayüzde detaylı olarak sunulacak kullanıcılar indirilebilir hale getirilecek iş paketi 6 test optimizasyon 45 ay yazılımın birim entegrasyon testleri yapılacak algoritmalar büyük dosyalar optimize edilecek yazılım performansı iyileştirilecek tüm süreçlerin işleyişine yönelik test raporları hazırlanacak iş paketi 7 proje sonlandırma dokümantasyon 5 ay kullanım kılavuzu teknik dokümantasyon hazırlanacak proje raporu oluşturulacak teslim süreci gerekli hazırlıklar tamamlanacak proje çıktıları detaylı şekilde sunuma uygun hale getirilecek bölüm 2 önceki çalişmalarin araştirilmasi bölümde intihal tespiti alanında yaygın olarak kullanılan çeşitli araçlar incelenmektedir araçların özellikleri avantajları dezavantajları kullanım alanları detaylı şekilde ele alınarak farklı ihtiyaçlara yönelik en uygun çözümlerin belirlenmesi amaçlanmaktadır inceleme hem ticari hem açık kaynaklı araçları kapsamakta özellikle çoka analizler gibi karmaşık senaryolar araçların yeterliliği değerlendirilmektedir 21 literatürdeki benzer çalışmalar intihal tespiti akademik profesyonel dünyada önemli konudur alanda farklı amaçlar geliştirilmiş çeşitli ticari açık kaynak araçlar mevcuttur özellikle çoka analizler grup ödevleri gibi karmaşık senaryolar tespit aracının kapsamlı özelliklere sahip olması gerekir aşağıda yaygın kullanılan intihal tespit araçlarının detaylı incelemesi sunulmuştur 211 ithenticate ithenticate bilimsel makaleler profesyonel yayınlar yüksek kaliteli akademik içerikler geliştirilen üst düzey intihal kontrol sistemidir yayınlanmış makaleler konferans bildirileri bilimsel veri tabanları gibi kaynakları tarayarak içeriklerin özgünlük durumunu yüksek doğrulukla analiz eder akademik yayınevleri araştırmacılar özel çözümler sunan ithenticate özellikle bilimsel makalelerin yayımlanmadan önceki orijinallik kontrollerinde kritik rol oynar kullanıcılarına sağladığı detaylı orijinallik raporları sayesinde içeriklerin güvenilirliğini artırır intihal riskini minimize eder ithenticate tezler bilimsel makaleler profesyonel yayınlar üzerinde çalışan araştırmacılar ideal araçtır platformlar arası iş birliğini destekleyen yapısı kullanıcı deneyimini güçlendirmektedir 3 httpswwwithenticatecom avantajları yüksek doğruluk bilimsel yayın desteği uluslararası standartlara uygun raporlama dezavantajları yüksek maliyet bireysel kullanıcılar uygun değil grup ödevleri çoka analizlerde yetersizlik kullanım alanları akademik yayınlar bilimsel makaleler yayınevleri 212 turnitin turnitin dünya çapında akademisyenler eğitim kurumları tarafından tercih edilen güvenilir intihal tespit platformudur geniş kapsamlı akademik veri tabanına sahip olan turnitin kullanıcıların içeriklerini kitaplar makaleler tezler diğer akademik çalışmalarla karşılaştırarak intihal oranını yüksek doğrulukla tespit edebilir turnitinin sunduğu en önemli özelliklerden biri orijinallik raporudur rapor belgelerde bulunan benzerlik oranlarını detaylı şekilde analiz ederek içeriklerin özgünlük seviyesini değerlendirmeye yardımcı olur ayrıca sistemin güçlü algoritmaları sayesinde özellikle akademik standartların korunmasına büyük katkı sağlanır üniversiteler akademisyenler araştırmacılar vazgeçilmez araç olan turnitin aynı zamanda akademik dürüstlük etik çalışmaların desteklenmesine önemli rol oynamaktadır 2 3 httpstrturnitincom avantajları geniş veri tabanı detaylı raporlama kullanıcı dostu arayüz dezavantajları yüksek maliyet çoka analiz eksikliği kullanım alanları akademik kurumlar üniversiteler okullar 213 plagscan plagscan düşük maliyetli açık kaynak intihal tespit aracıdır belirli düzeye kadar etkili çözüm sunmasına rağmen gelişmiş analiz gereksinimlerini karşılamada yetersizdir 3 httpswwwplagscancom avantajları düşük maliyetli lisans modeli çevrimdışı belgelerle karşılaştırma dezavantajları çoka analiz eksikliği veri tabanı kısıtlamaları kullanım alanları eğitim kurumları küçük işletmeler bireysel kullanıcılar 214 intihalnet intihalnet türkçe akademik çalışmalara odaklanmış yerli intihal tespit aracıdır türk üniversiteleri akademisyenler araştırmacılar tarafından yaygın şekilde kullanılan araç türkçe içeriklerin özgünlük kontrollerinde oldukça başarılıdır intihalnet akademik bilimsel raporlamalar kapsamlı tarama sistemi sunar kullanıcı dostu arayüzü sayesinde kolay kullanım deneyimi sağlar platform özellikle türkçe tezler makaleler diğer akademik çalışmalar üzerinde çalışan araştırmacılar idealdir türkçe kaynaklara erişim sağlama konusundaki başarısı intihalneti yerli akademik çalışmalar vazgeçilmez araç haline getirmiştir ayrıca kullanıcılara detaylı raporlar sunarak içeriklerin intihal oranını doğru şekilde analiz eder araştırma süreçlerinin verimliliğini artırır httpsintihalnet avantajları türkçe dil desteği kullanıcı dostu arayüz türkçe kaynaklara erişim detaylı raporlama dezavantajları dil desteği sınırlaması sadece türkçe veri tabanı kapsamının darlığı uluslararası kaynaklara sınırlı erişim çoka analiz eksikliği kullanım alanları türkiyedeki akademik kurumlar türkçe içerik üretenler 215 plagiarismchecker plagiarismchecker tamamen ücretsiz olması kullanımı kolay arayüzüyle bireysel kullanıcılar pratik intihal tespit aracıdır özellikle kısa metinlerin hızlı şekilde analiz edilmesine olanak tanıyan araç web tabanlı çalıştığı herhangi kurulum gerektirmez kopyala yapıştır yöntemiyle çalışan plagiarismchecker metinlerin temel düzeyde taranmasını sağlar kullanıcılarına kısa sürede sonuç sunar sağladığı temel raporlarla kullanıcıların içeriklerinin özgünlük durumunu anlamalarına yardımcı olur blog yazıları kısa makaleler ödevler gibi basit içeriklerde etkili şekilde çalışan araç karmaşık akademik metinler yerine küçük bireysel çalışmalar idealdir özellikle öğrenciler bireysel yazarlar arasında popülerdir 4 httpsplagiarismdetectornet avantajları tamamen ücretsiz kullanımı kolay arayüz hızlı analiz kurulum gerektirmemesi dezavantajları temel düzeyde tarama karmaşık analizlerde yetersizlik az kapsamlı veri tabanı kullanım alanları bireysel kullanıcılar öğrenciler blog yazarları kısa metinler tablo 21da çalışmaların birbirleriyle karşılaştırıldığı tablo verilmiştir tablo 2 araç karşılaştırma tablosu 22 mevcut çalışmaların karşılaştırılması eksikleri mevcut araçlar bire belge karşılaştırmasında etkili çözümler sunarken belgelerin birbirleriyle çoka eşleşme yöntemiyle analiz edilmesi gibi karmaşık ihtiyaçları karşılamakta yetersiz kalmaktadır özellikle sınıf düzeyinde yapılan grup ödevlerinde ya öğrencilerin aynı konu üzerinde çalıştığı bireysel ödevlerde belgeler arasındaki benzerliğin kapsamlı şekilde analiz edilmesi gerekmektedir ancak mevcut araçların çoğu tür gereksinimlere odaklanmamıştır 3 bölüm 3 yöntem tasarim bölümde projenin tasarım geliştirme süreci gereksinim analizinden sistem mimarisine metin analizi yöntemlerinden test süreçlerine kadar tüm detaylarıyla anlatılmaktadır riskler çözümleri beklenen faydalar ele alınmıştır 31 tasarım ihtiyaçları projenin başarılı şekilde hayata geçirilmesi çeşitli tasarım ihtiyaçları dikkate alınmıştır ihtiyaçlar kullanıcı deneyimini teknolojik altyapıyı maliyet etkinliğini sistem entegrasyonunu uyumluluğunu kapsamaktadır 311 kullanıcı ihtiyaç analizi sistemin temel amacı ödev proje diğer akademik içeriklerin özgünlüğünü analiz etmektir nedenle kullanıcı odaklı tasarım yaklaşımı benimsenmiştir kullanıcı ihtiyaç analizi sonucunda aşağıdaki gereksinimler belirlenmiştir kullanıcı dostu arayüz sistem seviyedeki kullanıcının kolayca anlayabileceği kullanabileceği sezgisel arayüze sahip olmalıdır karmaşık menülerden teknik terimlerden kaçınılarak basit anlaşılır dil kullanılmalıdır belge yükleme yönetimi kullanıcılar farklı formatlardaki belgelerini örneğin pdf doc docx kolayca yükleyebilmeli yönetebilmelidir yükleme süreci hızlı güvenli olmalıdır karşılaştırma başlatma kullanıcılar yükledikleri belgeler arasında karşılaştırma işlemini basit şekilde başlatabilmelidir gerekirse karşılaştırma parametrelerini örneğin benzerlik eşiği ayarlayabilmelidir detaylı raporlar sistem analiz sonuçlarını detaylı anlaşılır raporlar halinde sunmalıdır raporlar benzerlik oranlarını eşleşen metin bölümlerini diğer ilgili bilgileri içermelidir görselleştirmeler grafikler tablolar raporun anlaşılırlığını artırmalıdır görselleştirme analiz sonuçları grafikler tablolar aracılığıyla görselleştirilerek kullanıcıların veriyi kolay yorumlaması sağlanmalıdır benzerlik oranları eşleşen metin bölümleri diğer önemli veriler görsel olarak sunulmalıdır hızlı geri bildirim sistem analiz sonuçlarını mümkün olan en kısa sürede vermelidir uzun süren analizler kullanıcıya ilerleme durumu hakkında bilgi verilmelidir genel ihtiyaçların sistemdeki karşılıkları ilgili kullanıcı rolleri aşağıdaki şekil 31da gösterilmiştir şekil 3 kullanıcı ihtiyaç analizi 312 teknoloji gereksinimleri sistemin geliştirilmesinde performans ölçeklenebilirlik güvenlik kullanıcı deneyimi gibi faktörler göz önünde bulundurularak dizi teknoloji seçilmiştir kullanılan temel teknolojiler seçim nedenleri aşağıda detaylandırılmıştır ön yüz frontend vuejs kullanıcı etkileşimini yönetmek dinamik arayüz oluşturmak javascript tabanlı framework olan vuejs tercih edilmiştir arka yüz backend flask python api uç noktalarını oluşturmak veri işleme süreçlerini yönetmek veri tabanı iletişim kurmak python tabanlı hafif web frameworkü olan flask kullanılmıştır veri tabanı mssql yüklenen belgelerin analiz sonuçlarının kullanıcı bilgilerinin diğer verilerin güvenli verimli şekilde depolanması yönetilmesi microsoft sql server mssql veri tabanı kullanılmıştır api testi postman api uç noktalarının doğru çalıştığından beklenen yanıtları verdiğinden performans gereksinimlerini karşıladığından emin olmak postman kullanılmıştır programlama dili python metin karşılaştırma algoritmalarının geliştirilmesi veri analizi sonuçların görselleştirilmesi python programlama dili kullanılmıştır sistemin ana hatları aşağıda verilen şekil 32da istem mimarisinin genel görünümü diyagram sistem bileşenlerinin ön yüz arka yüz veri tabanı vb aralarındaki etkileşimin olduğunu göstermektedir şekil 3 sistem mimarisi 313 maliyet gereksinimleri projenin maliyet etkinliği önemli öncelik olarak belirlenmiş doğrultuda mümkün olduğunca açık kaynak teknolojiler tercih edilmiştir flask arka yüz vuejs ön yüz python ilgili kütüphaneler metin analizi gibi temel bileşenler açık kaynaklı ücretsizdir ancak mssql veri tabanı uygun lisanslama bütçesi ayrılması gerekmektedir mssqlin farklı sürümleri lisanslama seçenekleri bulunmaktadır 314 entegrasyon uyum gereksinimleri arayüz arka yüz iletişimi apilerin aracılığıyla sağlanacaktır postman test edilen apilerin entegrasyonu flask arka yüz yapısına vuejs ön yüz yapısına uygun şekilde yapılacaktır 32 tasarım kullanılacak sistem alt sistemler 321 ön yüz frontend vuejs vuejsin bileşen tabanlı yapısı kodun yeniden kullanılabilirliğini artırır geliştirme sürecini hızlandırır ayrıca performansı yüksektir zengin ekosisteme sahiptir tek sayfa uygulamaları spa geliştirmek idealdir kullanıcı deneyimini önemli ölçüde iyileştirir proje özelinde dosya yükleme analiz sonuçlarının görselleştirilmesi kullanıcı etkileşimlerinin yönetimi gibi modüller vuejs geliştirilecektir aşağıda şekil 33da yönlendirme mekanizmasından görsel verilmiştir 322 arka yüz backend flask python flaskın minimalist yapısı yüksek performans gerektiren uygulamalar uygundur esnek özelleştirilebilir yapısı sayesinde projenin özel ihtiyaçlarına göre kolayca adapte edilebilir pythonun güçlü kütüphaneleriyle örneğin metin işleme veri analizi entegrasyonu kolaydır proje dosya yükleme analiz başlatma sonuçları veri tabanından alma ön yüze gönderme gibi işlemler flask yönetilecektir 323 veri tabanı mssql mssql proje kapsamında yüksek performanslı veri depolama işleme ihtiyaçlarını karşılamak seçilmiştir veri tabanı yüklenen belgeleri karşılaştırma sonuçlarını kullanıcı erişim bilgilerini görselleştirme gerekli istatistikleri depolayacaktır tablolar normalize edilerek veri tutarlılığı sağlanacak karmaşık sorgular indeksleme yapılacaktır 324 postman api testi postman api geliştirme test süreçlerini kolaylaştıran güçlü araçtır api istekleri gönderme yanıtları inceleme test senaryoları oluşturma otomatik testler çalıştırma gibi özellikleri sunar proje farklı senaryolar altında apilerin doğruluğunu performansını güvenliğini test etmek postman kullanılacaktır 325 python veri işleme python zengin kütüphane ekosistemi nltk spacy scikitlearn matplotlib seaborn plotly vb sayesinde metin işleme doğal dil işleme nlp makine öğrenimi veri görselleştirme gibi alanlarda yaygın olarak kullanılan dildir 326 benzerlik analizi algoritmalarının çalışma prensipleri kullanım senaryoları metin benzerliği analizi doğal dil işleme nlp metin madenciliği alanlarında önemli yer tutmaktadır farklı metinler arasındaki benzerlikleri tespit etmek metin sınıflandırma intihal tespiti arama motoru optimizasyonu içerik öneri sistemleri gibi birçok uygulama gereklidir aşağıda en yaygın kullanılan metin benzerliği algoritmalarının çalışma prensipleri kullanım senaryoları açıklanmaktadır cosine similarity cosine benzerliği metinleri vektörler olarak temsil edip vektörler arasındaki açıyı cosine hesaplayarak benzerliği ölçen yöntemdir vektörler metnin içerdiği kelimelerin sıklıkları temsil edilir cosine benzerliği iki metnin yönlerinin birbirine kadar yakın olduğunu veya paralel olduğunu ölçer benzerliği 1 1 arasında değerle ifade eder cosine similarity belge benzerliği doküman sıralama gibi uygulamalar son derece etkilidir eposta sınıflandırma web arama motorları öneri sistemleri metin madenciliği gibi uygulamalarda büyük veri çalışırken yüksek verimlilik sağlar ayrıca uzun metinler anlamlı benzerlikler üzerine odaklanmak gerektiğinde doğru sonuçlar verir yüksek boyutlu veri setlerinde başarılı performans sergileyen algoritmadır 5 mongeelkan mongeelkan algoritması metin benzerliklerini ölçmek kullanılan güçlü esnek yöntemdir algoritma özellikle farklı şekillerde ifade edilen veya yazım hataları içeren kısa metinlerin karşılaştırılmasında etkili sonuçlar verir mongeelkan iki metindeki kelimeyi diğer metindeki tüm kelimelerle eşleştirir eşleşmelerin benzerlik skorlarını hesaplar süreçte genellikle başka string benzerlik algoritması örneğin levenshtein mesafesi veya jarowinkler alt algoritma olarak kullanılır kelime en yüksek benzerlik skoru seçilir tüm skorların ortalaması alınarak iki metin arasındaki genel benzerlik değeri elde edilir algoritmanın en belirgin avantajı küçük yazım hatalarına veya eşanlamlı ifadelerin varlığına karşı toleranslı olmasıdır mongeelkan birebir eşleşme aramak yerine en yüksek benzerliği seçerek metinler arasındaki anlam bütünlüğünü korur özellikle müşteri veritabanı eşleştirme adres karşılaştırma kısa metinli doğal dil işleme gibi uygulamalarda yaygın olarak kullanılır bununla birlikte mongeelkan algoritmasının kullanımında dikkat edilmesi gereken bazı noktalar vardır kullanılan alt algoritmanın seçimi sonuçların doğruluğu üzerinde doğrudan etkilidir örneğin levenshtein mesafesi yazım hatalarına karşı hassasken jarowinkler algoritması kısa metinler üzerinde etkili çalışabilir nedenle mongeelkanın en uygun sonuçları vermesi veri türüne karşılaştırma senaryosuna uygun alt algoritma seçimi yapılmalıdır 6 jarowinkler similarity jarowinkler benzerliği özellikle kısa metinler adlar arasındaki benzerliği ölçmek tasarlanmış algoritmadır algoritma metinlerdeki karakter benzerliklerini değerlendirir küçük yazım hatalarına duyarlıdır jarowinkler kelimelerdeki karakter sırasındaki benzerliği yer değiştirmeleri dikkate alarak skor üretir algoritma uzun metinlerdeki benzerlikleri doğru tespit etmekte zorlanabilir ancak küçük farkları oldukça hassas şekilde belirleyebilir jarowinkler özellikle ad eşleştirme yazım hatası düzeltme telefon numarası adres doğrulama gibi uygulamalar etkilidir veri doğrulama spam filtreleme benzer adların tespiti gibi işlemler yaygın olarak tercih edilen algoritmadır 7 sorensendice coefficient sorensendice katsayısı iki metin arasındaki benzerliği ölçmek kullanılan diğer küme benzerlik algoritmasıdır katsayı iki metnin ortak kelimelerinin sayısının iki metnin toplam kelimeleri karşılaştırılmasıyla hesaplanır sorensendice katsayısı özellikle metinlerin ortak ögelerinin oranını belirlemek etkilidir sorensendice coefficient özellikle kısa metinlerde kelime kümesi benzerliği analizi kullanılır metinlerin karşılaştırılması belge öneri sistemleri etiketleme sistemlerinde başarılı sonuçlar elde etmek uygundur ayrıca metinler arasındaki küçük benzerlikleri tespit etmekte oldukça etkili algoritmadır algoritma farklı veri yapıları metin türleri kullanım senaryolarına göre değişik performanslar sergileyebilir nedenle doğru algoritmayı seçmek belirli kullanım durumu doğru sonuca ulaşabilmek adına son derece önemlidir örneğin tfidf genellikle büyük veri setlerinde metinlerin içerik benzerliğini analiz etmek mükemmel seçimken levenshtein mesafesi yazım hatası tespiti etkili olur cosine similarity uzun metinlerdeki anlamlı benzerlikleri tespit etmek ideal yöntemken jarowinkler algoritması kısa metinlerdeki yazım hatalarını doğru şekilde belirleyebilir 8 jaccard index jaccard benzerliği iki küme arasındaki ortak öğelerin oranını ölçer algoritma metinleri kelime kümeleri olarak kabul eder iki küme arasındaki benzerliği küme kesişimi birleşiminin oranı olarak hesaplar jaccard index genellikle kelimeler arasındaki ortaklıkları metinler arasındaki yapısal benzerlikleri değerlendiren metottur jaccard index özellikle kısa metinler kelime kümesi analizleri oldukça etkili algoritmadır metin madenciliği veritabanı sorgulama gibi alanlarda etiketleme doküman eşleştirme kümelenme clustering gibi işlemler yaygın şekilde kullanılır jaccard özellikle sosyal medya analizleri hashtag analizleri metin analizi gibi ortamlarda metinlerin içerik benzerliklerini iyi anlamak faydalıdır 9 tfidf term frequencyinverse document frequency tfidf kelimenin belirli metin veya belge içinde kadar önemli olduğunu belirlemek kullanılan istatistiksel yöntemdir iki temel bileşenden oluşur term frequency tf kelimenin metin içindeki sıklığını ölçerken inverse document frequency idf kelimenin tüm belgelerde kadar yaygın olduğunu değerlendiren parametredir iki bileşen birleştirilerek kelimenin metin içindeki gerçek önem derecesi hesaplanır yüksek tfidf değeri kelimenin sadece belirli metinde sıkça geçtiğini değil aynı zamanda o metinde özgün anlamlı yere sahip olduğunu gösterir tfidf özellikle büyük veri setlerinde metin madenciliği içerik analizi gibi uygulamalarda yaygın olarak kullanılır arama motorları doküman sınıflandırma belge öneri sistemleri gibi alanlarda oldukça etkilidir yöntem metinlerin içeriğine dair önemli kelimeleri çıkarmada oldukça başarılıdır ayrıca algoritma sık kullanılan kelimelerin veya durak kelimelerin stop words metin analizi üzerinde olumsuz etkisi olmasını engeller 10 şekil 33da tfidf formülü görselleştirilmiştir şekil 3 tfidf formülü levenshtein distance levenshtein distance iki metin arasında yapılan değişiklikleri ekleme silme değiştirme ölçer yöntem metinlerin harf düzeyinde kadar farklı olduğunu değerlendirmek kullanılabilir 11 aşağıdaki denklem 31 şekil 34da formül örnek verilmiştir denklem 31 levenshtein distance formülü şekil 3 levenshtein distance örneği algoritmaların karşılaştırılması farklı metin benzerliği algoritmalarının performansını karşılaştırmak hangi algoritmanın belirli uygulama en uygun olduğunu belirlemek açısından büyük önem taşır bölümde tfidf jaccard index cosine similarity jarowinkler similarity sorensendice coefficient algoritmalarının metinler üzerinde benzerlik oranı tespit edilmiştir ayrıca test aşamasında farklı metinler kullanılarak hangi algoritmaların hangi tür metin verileri kullanım senaryoları etkili olduğunu tespit edilmiştir test aşamasında kendi programımız kullanılmış sonuçlar aşağıda verilmiştir test 1 şekil 35 verilen test girdisi sonuçları şekil 36da gösterilmiştir şekil 3 test 1 girdisi şekil 3 test 1 sonucu test 2 şekil 37 verilen test girdisi sonuçları şekil 38da gösterilmiştir şekil 3 test 2 girdisi şekil 3 test 2 sonucu test 3 şekil 39 verilen test girdisi sonuçları şekil 310da gösterilmiştir şekil 3 test 3 girdisi şekil 3 test 3 sonucu 33 yöntem bölümde sistemin geliştirilmesinde izlenen yöntemler kullanılan teknolojiler uygulanan süreçler detaylandırılmaktadır sistem modüler yaklaşımla ön yüz arka yüz veri işleme veri tabanı katmanları olarak tasarlanmıştır 331 flask tabanlı arka yüz geliştirme sistemin arka yüzü python tabanlı hafif web frameworkü olan flask kullanılarak geliştirilmiştir flaskın esnek minimalist yapısı restful apiler oluşturmak uygun zemin sağlamıştır arka yüz geliştirme sürecinden aşağıdaki örnekler verilmiştir api uç noktaları aşağıda bazı api uç noktalarının görevleri aktarılmıştır post upload kullanıcıların dosyalarını sisteme yüklemesini sağlayan uç noktadır yüklenen dosyalar sunucuda güvenli dizine kaydedilir dosya meta verileri ad boyut yüklenme zamanı vb mssql veri tabanına kaydedilir post compare karşılaştırma işlemini başlatır uç nokta gerekli analiz parametrelerini alır analiz işlemini gerçekleştirmek üzere python modülüne yönlendirir get resultsanalysis_id belirli analiz idsine ait sonuçları döndüren uç noktadır sonuçlar veri tabanından alınarak uygun formatta json gibi ön yüze iletilir aşağıda şekil 311da flask uygulamasından uç noktaendpoint örnekleri verilmiştir şekil 3 flask endpoint güvenlik sistem güvenliği ön planda tutularak aşağıdaki önlemler alınmıştır dosya yükleme sırasında yalnızca izin verilen dosya türleri pdf doc docx kabul edilir olası güvenlik açıklarını en aza indirir kullanıcı kimlik doğrulaması jwt tabanlı mekanizma kullanılmıştır güvenli ölçeklenebilir kimlik doğrulama yöntemi sağlar performans yüksek performans sağlamak amacıyla aşağıdaki optimizasyonlar yapılmıştır veritabanı işlemlerini optimize etmek flasksqlalchemy orm kullanılmıştır veritabanı etkileşimlerini verimli hale getirir 332 python metin analizi metin tabanlı analiz işlemleri python ilgili kütüphaneler kullanılmıştır analiz süreci adımları içerir ön işleme metin analizi verilerin hazırlanması amacıyla aşağıdaki işlemler gerçekleştirilir belgelerden metin çıkarma işlemi pypdf2 pythondocx kütüphaneleri kullanılmıştır çıkarılan metinler gereksiz kısımların kapak sayfası özet içindekiler vb filtrelenmesi önceden tanımlanmış anahtar kelimelerle analiz edilir doğal dil işleme nlp teknikleri uygulanarak nltk spacy kütüphaneleri durak kelimeler stop words temizlenir metin tokenizasyonu yapılır benzerlik analizi belgeler arasındaki benzerliği ölçmek tfidf term frequencyinverse document frequency levenshtein distance jaccard index cosine similarity algoritmaları kullanılmıştır algoritmalar belgelerin farklı yönlerden benzerliğini değerlendirmek birlikte veya ayrı ayrı kullanılabilir elde edilen sonuçlar eşleşen bölümlerin satır paragraf bazında detaylı analizini içeren yapıda raporlanır sonuçların raporlanması analiz sonuçları python veri görselleştirme kütüphaneleri matplotlib seaborn plotly kullanılarak anlamlı okunabilir raporlar haline getirilir veri tabanında saklanır sonuçlar flask api aracılığıyla ön yüze iletilerek kullanıcılara sunulur 333 mssql tabanlı veri depolama verilerin kalıcı olarak saklanması etkin şekilde yönetilmesi microsoft sql server mssql veritabanı kullanılmıştır veritabanı şeması aşağıdaki tabloları içerir kullanıcılar sistem kullanıcılarının kimlik bilgileri yetkilendirme bilgileri tabloda saklanır yüklenen dosyalar yüklenen dosyaların meta verileri dosya adı boyutu yükleme tarihi kullanıcı idsi vb tabloda tutulur analiz sonuçları analiz işlemine ait benzerlik oranları eşleşen bölümler diğer ilgili veriler benzersiz analiz idsi ilişkilendirilerek tabloda saklanır şekil 312da veri tabanı diyagramı gösterilmiştir şekil 3 veri tabanı tablosu veritabanı performansını optimize etmek aşağıdaki teknikler kullanılmıştır sık kullanılan sorgularda performansı artırmak uygun indeksler oluşturulmuştur karmaşık sorguların performansını artırmak veritabanı sunucusundaki yükü azaltmak saklı yordamlar stored procedures kullanılmıştır 334 vuejs frontend geliştirme kullanıcı dostu etkileşimli arayüz oluşturmak vuejs frameworkü kullanılmıştır ön yüz geliştirme sürecinde aşağıdaki özellikler uygulanmıştır dosya yükleme kullanıcıların dosyalarını kolayca yükleyebileceği yükleme durumunu gerçek zamanlı olarak gösteren hata mesajları doğrulama adımlarını içeren modül tasarlanmıştır sonuç görselleştirme analiz sonuçları dinamik grafikler tablolar vurgulanmış eşleşen metin bölümleri görselleştirilerek kullanıcıların sonuçları kolay anlaması sağlanmıştır api entegrasyonu arka yüz iletişim kurmak verileri almak axios kütüphanesi kullanılmıştır aşağıda şekil 313da yönlendirme mekanizmasından görsel verilmiştir şekil 3 vuejs yönlendirme 335 entegrasyon test süreçleri sistemin tüm bileşenlerinin sorunsuz şekilde entegre olduğunu doğru çalıştığını doğrulamak kapsamlı test süreçleri uygulanmıştır süreçler şunlardır api testleri postman kullanılarak api uç noktasının doğruluğu performansı hata durumları test edilmiştir aşağıda şekil 314da api üzerinden gelen json verilerinin kontrolü gösterilmiştir şekil 3 postman api kontrolü veritabanı testleri veri tabanına yapılan veri yazma okuma işlemlerinin doğruluğu performansı test edilmiştir kullanıcı testleri gerçek kullanıcı senaryolarını simüle etmek kullanıcı deneyimini değerlendirmek test kullanıcıları testler yapılmıştır testler dosya yükleme analiz başlatma sonuç raporlama süreçlerini kapsamaktadır 34 süreç veri akış diyagramları sistemin işleyişini veri akışını iyi görselleştirmek iki farklı akış şeması kullanılmaktadır bunlar sistemin genel akışını metin analizi süreçlerinin detaylarını göstermektedir 341 sistem genel akış diyagramı sistemimizin genel mimarisi şekil 32da gösterilmiştir ilgili şekilde numaralandırılan işlemler aşağıdaki şekil 315da dosya yükleme sürecinden rapor görüntüleme sürecine kadar sistemdeki ana adımları göstermektedir şekil 3 sistem genel akış diyagramı 342 metin işleme akış diyagramı aşağıda şekil 316da metin ön işleme adımlarını temizleme tokenizasyon vb algoritmalarının uygulandığını detaylı şekilde göstermektedir şekil 3 metin ön işleme şeması 343 karşılaştırma akış diyagramı karşılaştırma algoritmalarının uygulandığı şekil 317da gösterilmiştir şekil 3 karşılaştırma şeması 35 tasarım öngörülen bütçe hesabı tablo 3 tasarım öngörülen bütçe tablosu tablo 31da tasarım öngörülen bütçe hesabına ait veriler yer almaktadır 36 analizler bölümde geliştirilen sistemin uygulanması sırasında karşılaşılabilecek olası sorunlar sorunların çözümüne yönelik öneriler detaylı olarak ele alınmıştır ayrıca sistemin etkili verimli şekilde çalışmasını sağlamak amacıyla risk analizi mühendislik analizi yapılmıştır 361 risk analizi geliştirilen sistemin farklı aşamalarında çeşitli riskler tespit edilmiştir risklerin minimize edilmesi sistemin güvenilirliği verimliliği açısından önemlidir 3611 veritabanı bütünlüğü tutarlılık riskleri risk dosyaların meta verilerinin dosya adı boyutu yükleme tarihi vb veya analiz sonuçlarının veri tabanına yanlış veya tutarsız şekilde kaydedilmesi hatalı raporlamaya veri kaybına veya sistemin genel kararlılığının bozulmasına olabilir veri tekrarları eksik veriler veya yanlış ilişkiler gibi çeşitli şekillerde ortaya çıkabilir çözüm veritabanı bütünlüğünü tutarlılığını sağlamak aşağıdaki önlemler alınmıştır veritabanı kısıtlamaları constraints veritabanı şemasında uygun kısıtlamalar örneğin birincil anahtarlar yabancı anahtarlar benzersiz kısıtlamalar boş olmama kısıtlamaları tanımlanarak veri tutarlılığı zorlanmıştır yanlış veri girişlerini engeller veri bütünlüğünü korur işlemsel bütünlük transactional integrity veritabanı işlemleri atomik tutarlı izole dayanıklı acid özelliklerini sağlayan işlemler transactions içinde gerçekleştirilir sayede işlem tamamlanamazsa veritabanı önceki tutarlı durumuna geri döner veri tutarsızlıkları önlenir örneğin dosya yükleme işlemi sırasında hem dosya meta verileri hem analiz sonuçları aynı işlem içinde kaydedilir işlemin herhangi aşamasında hata oluşursa hiçbir veri kaydedilmez veri doğrulama temizleme düzenli olarak veri doğrulama temizleme işlemleri gerçekleştirilir işlemler veri tabanındaki verilerin tutarlılığını doğruluğunu kontrol eder hatalı veya tutarsız verileri düzeltir veritabanı yedekleme geri yükleme veri kaybını önlemek düzenli olarak veritabanı yedekleri alınır gerekli durumlarda veritabanı önceki yedekten geri yüklenebilir hata yönetimi exception handling uygulama kodunda veritabanı etkileşimleri sırasında oluşabilecek istisnaları exceptions yakalamak uygun şekilde işlemek tryexcept blokları veya benzer hata işleme mekanizmaları kullanılır 3612 performans sorunları risk büyük boyutlu dosyaların eşzamanlı olarak yüklenmesi analiz edilmesi sunucu kaynaklarını aşırı yükleyerek sistem performansını olumsuz etkileyebilir yanıt sürelerini uzatabilir hatta sistemin çökmesine olabilir çözüm performansı artırmak sistemin ölçeklenebilirliğini sağlamak aşağıdaki stratejiler uygulanmıştır çoklu iş parçacığıçoklu süreç multithreadingmultiprocessing dosya işleme analiz işlemleri eşzamanlı olarak birden fazla iş parçacığı veya süreç üzerinde çalıştırılarak paralel hale getirilmiştir işlem hızını artırır sunucu kaynaklarının verimli kullanılmasını sağlar asenkron işlemler asynchronous operations uzun süren işlemler örneğin analiz işlemleri asenkron olarak gerçekleştirilir ana uygulamanın bloke olmasını engeller kullanıcı arayüzünün yanıt vermeye devam etmesini sağlar yük dengeleme load balancing birden fazla sunucu kullanılıyorsa yük dengeleme mekanizmaları gelen istekler sunucular arasında eşit olarak dağıtılır tek sunucu üzerindeki yükü azaltır sistem performansını iyileştirir veritabanı optimizasyonu veritabanı sorguları indeksleri optimize edilerek veritabanı işlemlerinin performansı artırılmıştır önbellekleme caching sık erişilen veriler önbellekte saklanarak veri tabanına yapılan gereksiz erişimler azaltılmıştır 3613 kullanıcı hataları risk kullanıcıların desteklenmeyen dosya formatlarını yüklemesi yanlış parametrelerle analiz başlatması veya diğer hatalı girişler yapması beklenmeyen sistem davranışlarına hatalara veya güvenlik açıklarına yol açabilir çözüm kullanıcı hatalarını önlemek sistemin güvenliğini artırmak aşağıdaki önlemler alınmıştır giriş doğrulama input validation kullanıcı girişleri dosya formatları analiz parametreleri vb sunucu tarafında kapsamlı şekilde doğrulanır desteklenmeyen formatlar veya geçersiz parametreler tespit edildiğinde kullanıcıya açıklayıcı hata mesajları gösterilir kullanıcı arayüzü ui kılavuzluğu kullanıcı arayüzü kullanıcıları doğru işlemleri yapmaya yönlendirecek şekilde tasarlanmıştır açık etiketler ipuçları rehberlik mesajları kullanılarak kullanıcı hataları en aza indirilmeye çalışılır 362 mühendislik analizi projenin başarılı şekilde tamamlanması kapsamlı mühendislik analizi gerçekleştirilmiştir analizler projenin teknik gereksinimlerini mimarisini test stratejilerini entegrasyon planlarını kapsayarak geliştirme sürecinin sağlam temel üzerine oturtulmasını olası teknik sorunların önlenmesini hedefler 3621 gereksinim analizi yönetimi paydaşlarla yapılan görüşmeler doküman incelemeleriyle detaylı gereksinimler toplanmış fonksiyonel fonksiyonel olmayan gereksinimler olarak sınıflandırılmıştır gereksinimlerin izlenebilirliği değişiklik yönetimi uygun araçlar kullanılarak belirsizliklerin önüne geçilmiş net proje kapsamı oluşturulmuştur 3622 sistem mimarisi tasarımı gereksinimler doğrultusunda sistemin genel mimarisi temel bileşenleri tasarlanmıştır modüler yaklaşım benimsenerek sistemin farklı parçalarının bağımsız geliştirilmesi bakımı kolaylaştırılmıştır performans güvenlik ölçeklenebilirlik gereksinimlerini karşılayacak teknolojiler seçilmiş mimarinin doğruluğu uzman incelemeleri prototiplerle teyit edilmiştir 3623 test stratejisi planlaması sistemin kalitesini güvenilirliğini artırmak kapsamlı test stratejisi oluşturulmuştur farklı test seviyeleri türleri belirlenmiş gereksinimlere göre test senaryoları hazırlanmış test otomasyon araçları seçilmiştir sayede hataların erken tespiti projenin genel kalitesinin artırılması hedeflenmiştir 3624 entegrasyon stratejisi sistemin farklı bileşenlerinin harici sistemlerle sorunsuz entegrasyonu strateji geliştirilmiştir entegrasyon arayüzleri net şekilde tanımlanmış entegrasyon testleri erken aşamalarda başlatılmıştır entegrasyon sorunlarını en aza indirerek sistemin stabil çalışmasını sağlamayı amaçlar 3625 konfigürasyon yönetimi proje boyunca üretilen tüm çıktıların düzenli saklanması versiyonlanması yönetimi etkili konfigürasyon yönetimi stratejisi uygulanmıştır versiyon kontrol sistemi git kullanılarak proje dosyalarının takibi sağlanmış yapılandırma dosyaları dağıtım süreçleri standartlaştırılmıştır bölüm 4 bulgular bölümde geliştirilen sistemin test edilmesiyle elde edilen bulgular gözlemler özetlenmiştir sistem farklı senaryolarda denenmiş aşağıdaki sonuçlara ulaşılmıştır 41 zaman kazanımı sistemin manuel yöntemlere kıyasla analiz sürelerini önemli ölçüde azalttığı gözlemlenmiştir örneğin manuel olarak 1520 dakika sürebilen analiz işlemi sistem sayesinde ortalama 10 saniyede tamamlanabilmiştir birden fazla belgenin karşılaştırılması gereken senaryolarda toplam süre manuel yöntemlere göre 85 oranında azalmıştır 42 doğruluk sistem belgeler arasındaki benzerlikleri tespit etme konusunda genel olarak tatmin edici performans sergilemiştir test edilen 500 çift belge üzerinde yapılan analizlerde sistemin doğruluk oranı 92 olarak hesaplanmıştır özellikle metinlerde birebir eşleşen cümlelerde başarı oranı 98 iken yeniden yazılmış karmaşık cümlelerde oran 85 seviyesinde kalmıştır 43 sistem performansı api uç noktalarının yanıt sürelerinin çoğu durumda makul seviyelerde olduğu gözlemlenmiştir ortalama yanıt süreleri 200300 ms aralığında seyretmiş en yoğun kullanım anlarında bile süre 1 saniyeyi aşmamıştır ancak 100 mbden büyük dosyaların işlenmesi sırasında 10 oranında ek gecikmeler gözlemlenmiştir 44 kullanıcı deneyimi arayüz testlere katılan 50 kullanıcıdan 92si tarafından kolay anlaşılır kullanışlı bulunmuştur analiz sonuçlarının tablolar grafiklerle görselleştirilmesi kullanıcıların sonuçları anlamasına büyük katkı sağlamıştır bununla birlikte 8lik kullanıcı grubu bazı fonksiyonların aşamalı yapısı nedeniyle fazla yardım dokümanına ihtiyaç duyduklarını belirtmiştir 45 genel değerlendirme sistem hedeflenen işlevselliği büyük oranda karşılamış kullanıcıların ihtiyaçlarını genel olarak tatmin edici şekilde karşılayabilmiştir testlerden elde edilen verilere göre sistem 88 oranında genel başarı sağlamıştır bununla birlikte uygulama sırasında tespit edilen iyileştirme alanları büyük dosya işleme süreleri belirli yeniden yazılmış metinlerdeki analiz hassasiyeti gelecekteki geliştirme aşamalarında ele alınabilir bölüm 5 tartişma sonuç bölümde geliştirilen sistemin sağladığı avantajlar hedeflere ulaşma durumu karşılaşılan zorluklar sistemin güçlü yönleri tartışılmış ayrıca projenin genel başarısı gelecekteki çalışmalar öneriler sunulmuştur 51 tartışma geliştirilen sistem akademik belgeler arasındaki benzerliklerin tespit edilmesine yönelik önemli çözüm sunmuştur sistemin sunduğu hız doğruluk kullanım kolaylığı gibi avantajlar mevcut manuel yöntemlere kıyasla belirgin iyileştirmeler sağlamıştır hedeflerin karşılanması proje başında belirlenen hedefler büyük ölçüde karşılanmış sistem dosyaların karşılaştırılması detaylı raporların sunulması gibi temel işlemleri başarıyla yerine getirmiştir sistem özellikle birebir eşleşen metinlerin doğruluğunu 98 yeniden yazılmış metinlerin tespitini 85 oranında başarıyla tamamlamıştır karşılaşılan zorluklar büyük boyutlu veya kompleks yapıdaki dosyaların işlenmesi sırasında performans kaybı yaşanmış yanıt sürelerinde 10a kadar uzamalar gözlemlenmiştir ayrıca metin madenciliği algoritmaları bazı karmaşık ifadeleri veya yeniden yazımları tam olarak tespit edememiştir kullanıcı deneyimi açısından özellikle analiz sırasında kullanıcı geri bildirimlerinin yetersiz kaldığı durumlar tespit edilmiştir sistemin güçlü yönleri sistem sayıda belgenin aynı anda karşılaştırılmasına olanak tanıyarak grup çalışmaları önemli kolaylık sağlamıştır ayrıca sonuçların tablolar grafiklerle görselleştirilmesi analizlerin hızlı anlaşılır hale gelmesine katkı sağlamıştır testlere katılan kullanıcıların 92si sistemin genel işlevselliğinden memnun kaldıklarını belirtmiştir 52 sonuç proje kapsamında geliştirilen sistem akademik belgelerde benzerlik analizini gerçekleştirme konusunda etkili kullanışlı araç olarak değerlendirilmiştir sistemin kullanımı özellikle eğitim kurumlarında grup ödevleri projelerin değerlendirilmesinde zaman emek tasarrufu sağlamıştır elde edilen başarılar belgelerin birbiriyle çoka eşleşme yöntemiyle analiz edilmesi detaylı kullanıcı dostu raporların oluşturulması açık kaynak teknolojilerin kullanımı sayesinde sistem maliyetlerinin düşürülmesi sağlanmıştır gelecekteki çalışmalar sistemin gelecekte büyük veri kümesi farklı dosya türlerine uyarlanabilir hale getirilmesi yeniden yazım karmaşık ifadelerin tespitinde gelişmiş doğal dil işleme tekniklerinin entegrasyonu arayüz rehberliğinin artırılması gizlilik önlemlerinin güçlendirilmesi hedeflenmektedir sonuç olarak geliştirilen sistem mevcut haliyle kullanıcılara değerli araç sunarken gelecekteki iyileştirme geliştirme çalışmalarıyla geniş kullanım alanına hitap etme potansiyeli taşımaktadır kaynaklar 1 e uzun t karakuş e kurşun and h karaaslan öğrenci gözüyle aşırma intihal çözüm önerileri akademik bilişim07 ix akademik bilişim konferansı bildirileri dumlupınar üniversitesi kütahya türkiye jan 31feb 2 2007 pp 183190 2 s a meo and m talha turnitin is it a text matching ör plagiarism detection tool saudi journal of anaesthesia vol 13 suppl 1 pp s48s51 apr 2019 doi 104103sjasja_772_18 3 ia condurache and s d bolboacă comparison of plagiarism detection performance between some commercial and free software appl med inform vol 44 no 2 pp 7386 jun 2022 4 s g k chikkam plagiarism checker all capstone projects spring 2023 5 d gunawan c a sembiring and m a budiman the implementation of cosine similarity to calculate text relevance between two documents journal of physics conference series vol 978 no 1 p 012120 2018 doi 101088174265969781012120 6 m del pilar angeles and a espinogamez comparison of methods hamming distance jaro and mongeelkan dbkda 2015 the seventh international conference on advances in databases knowledge and data applications graphsm 2015 the second international workshop on largescale graph storage and management rome italy may 2429 2015 isbn 9781612084084 7 s c cahyono comparison of document similarity measurements in scientific writing using jarowinkler distance method and paragraph vector method iop conference series materials science and engineering vol 662 no 5 pp 052016 2019 doi 1010881757899x6625052016 8 x li c wang x zhang and w sun generic sao similarity measure via extended sørensendice index in ieee access vol 8 pp 6653866552 2020 doi 101109access20202984024 9 l fontoura costa further generalizations of the jaccard index sao carlos institute of physics dfcmusp oct 10 2021 10 a aizawa an informationtheoretic perspective of tfidf measures national institute of informatics tokyo japan aug 4 2001 accepted jan 4 2002 11 s zhang y hu and g bian research on string similarity algorithm based on levenshtein distance 2017 ieee 2nd advanced information technology electronic and automation control conference iaeac chongqing china 2017 pp 22472251 doi 101109iaeac20178054419 standartlar kisitlar formu çalışmanın amacını özetleyiniz çalışmanın amacı akademik belgeler arasında benzerlik analizlerini gerçekleştiren çoka eşleştirme yapabilen kullanıcı dostu eğitim odaklı yazılım sistemi geliştirmektir sistem belgelerin benzerlik oranlarını detaylı raporlarla sunarak intihal tespit sürecini kolaylaştırmayı hedeflemektedir çalışmanın tasarım boyutunu açıklayınız proje tamamen yeni çalışmadır çalışmanın tasarımı proje toplamının 100ünü oluşturmaktadır başlangıçtan son aşamaya kadar tüm süreç gereksinim analizi tasarım geliştirme test raporlama çalışmaya özgü olarak gerçekleştirilmiştir çalışmada mühendislik problemini kendiniz formüle edip çözdünüz mü evet akademik belgelerin benzerlik analizini gerçekleştiren mevcut ticari yazılımların yetersizlikleri çoka eşleştirme eksikliği yüksek maliyet tespit edilerek soruna yönelik uygun çözüm geliştirilmiştir örneğin grup ödevlerinde belgelerin birbiriyle kapsamlı analiz edilmesi sorununu çözmek özel algoritmalar kullanıcı dostu sistem geliştirilmiştir çalışmada kullandığınız yöntemler nelerdir önceki derslerde edindiğiniz hangi bilgi becerileri kullandınız açıklayınız çalışmada kullanılan yöntemler arasında doğal dil işleme nlp metin analizi algoritma tasarımı cosine similarity jaccard index levenshtein distance yazılım geliştirme flask vuejs veri tabanı tasarımı mssql yer almaktadır projede algoritma programlamaya giriş nesneye yönelik programlama veri yapıları algoritmalar veri tabanı yönetim sistemleri yapay zeka uygulamaları yapay öğrenmenin temelleri yazılım mühendisliği derslerinden edinilen bilgi beceriler kullanılmıştır derslerde kazanılan programlama temelleri python javascript veri tabanı yönetimi proje yönetimi doğal dil işleme teknikleri projede etkin şekilde uygulanmıştır kullandığınız veya dikkate aldığınız mühendislik standartları nelerdir isoiec 25010 yazılım ürün kalitesi ieee 1012 yazılım doğrulama geçerlilik isoiec 9126 yazılım mühendisliği ürün kalitesi ieee 829 yazılım test dokümantasyonu mühendislik standartları kullanılmıştır kullandığınız veya dikkate aldığınız gerçekçi kısıtlar nelerdir lütfen çalışmanıza uygun yanıtlarla doldurunuz ekonomi açık kaynak teknolojiler tercih edilerek maliyet azaltılmıştır ticari yazılımlara kıyasla düşük maliyetli çözüm sunulmuştur b çevre sorunları dijital çözüm olması kâğıt tüketimini azaltarak çevre dostu alternatif sağlamaktadır c sürdürülebilirlik sistem açık kaynak ölçeklenebilir mimarisiyle uzun vadeli kullanım uygundur d üretilebilirlik flask vuejs gibi yaygın kullanılan teknolojilerle geliştirildiği kolayca genişletilebilir sürdürülebilir e etik akademik etik değerleri desteklemek amacıyla intihalin önlenmesine yönelik sistem tasarlanmıştır f sağlık tasarım projesi sağlık ilgili herhangi alanla ilgilenmemektedir sağlık açısından sorun teşkil etmemektedir g güvenlik dosya yükleme kullanıcı kimlik doğrulama süreçlerinde güvenlik önlemleri örneğin jwt uygulanmıştır h sosyal politik sorunlar sistem akademik dürüstlüğü desteklemek adil değerlendirme süreçlerini teşvik etmek amacıyla tasarlanmıştır özgeçmiş hakan değer 13032002de kocaelide doğdu ilk orta lise eğitimini kocaelide tamamladı 2020 yılında 24 kasım anadolu lisesinden mezun oldu lise eğitiminin ardından 2020 yılında kocaeli üniversitesi makine mühendisliği bölümünü kazandı 2021 yılında merkezi yerleştirme puanı sakarya uygulamalı bilimler üniversitesi bilgisayar mühendisliği bölümüne yatay geçiş yaptı mesleki ilgi alanları arasında doğal dil işleme makine öğrenmesi mobil uygulama geliştirme yer almaktadır emre almamiş 08012001de muşta doğdu ilk orta lise eğitimini kocaelide tamamladı 2019 yılında muallim naci anadolu lisesinden mezun oldu lise eğitiminin ardından 2021 yılında sakarya uygulamalı bilimler üniversitesi bilgisayar mühendisliği bölümünü kazandı mesleki ilgi alanları arasında web mobil geliştirme yer almaktadır ismail selim inanir 28112003de sakaryada doğdu ilk öğretimini sakaryada tamamladı orta lise eğitimini tokatta tamamladı 2021 yılında özel ay işığı fen lisesinden mezun oldu lise eğitiminin ardından 2021 yılında sakarya uygulamalı bilimler üniversitesi bilgisayar mühendisliği bölümünü kazandı mesleki ilgi alanları arasında görüntü işleme doğal dil işleme mobil uygulama geliştirme yer almaktadır",
    "raw_text2": "1turnitin turnitin dünya çapında akademisyenler eğitim kurumları tarafından tercih edilen güvenilir intihal tespit platformudur geniş kapsamlı akademik veri tabanına sahip olan turnitin kullanıcıların içeriklerini kitaplar makaleler tezler diğer akademik çalışmalarla karşılaştırarak intihal oranını yüksek doğrulukla tespit edebilir turnitinin sunduğu en önemli özelliklerden biri orijinallik raporudur rapor belgelerde bulunan benzerlik oranlarını detaylı şekilde analiz ederek içeriklerin özgünlük seviyesini değerlendirmeye yardımcı olur ayrıca sistemin güçlü algoritmaları sayesinde özellikle akademik standartların korunmasına büyük katkı sağlanır üniversiteler akademisyenler araştırmacılar vazgeçilmez araç olan turnitin aynı zamanda akademik dürüstlük etik çalışmaların desteklenmesine önemli rol oynamaktadır httpstrturnitincom adresinden ulaşabilirsiniz 2ithenticate ithenticate bilimsel makaleler profesyonel yayınlar yüksek kaliteli akademik içerikler geliştirilen üst düzey intihal kontrol sistemidir yayınlanmış makaleler konferans bildirileri bilimsel veri tabanları gibi kaynakları tarayarak içeriklerin özgünlük durumunu yüksek doğrulukla analiz eder akademik yayınevleri araştırmacılar özel çözümler sunan ithenticate özellikle bilimsel makalelerin yayımlanmadan önceki orijinallik kontrollerinde kritik rol oynar kullanıcılarına sağladığı detaylı orijinallik raporları sayesinde içeriklerin güvenilirliğini artırır intihal riskini minimize eder ithenticate tezler bilimsel makaleler profesyonel yayınlar üzerinde çalışan araştırmacılar ideal araçtır platformlar arası işbirliğini destekleyen yapısı kullanıcı deneyimini güçlendirmektedir httpswwwithenticatecom adresinden ulaşabilirsiniz 4intihalnet intihalnet türkçe akademik çalışmalara odaklanmış yerel kullanıcılar optimize edilmiş intihal tespit platformudur türk üniversiteleri akademisyenler araştırmacılar tarafından yaygın şekilde kullanılan araç türkçe içeriklerin özgünlük kontrollerinde oldukça başarılıdır intihalnet akademik bilimsel raporlamalar kapsamlı tarama sistemi sunar kullanıcı dostu arayüzü sayesinde kolay kullanım deneyimi sağlar platform özellikle türkçe tezler makaleler diğer akademik çalışmalar üzerinde çalışan araştırmacılar idealdir türkçe kaynaklara erişim sağlama konusundaki başarısı intihalneti yerli akademik çalışmalar vazgeçilmez araç haline getirmiştir ayrıca kullanıcılara detaylı raporlar sunarak içeriklerin intihal oranını doğru şekilde analiz eder araştırma süreçlerinin verimliliğini artırırhttpsintihalnet adresinden web sitesine ulaşabilirsiniz 3plagiarismchecker plagiarismchecker tamamen ücretsiz olması kullanımı kolay arayüzüyle bireysel kullanıcılar pratik intihal tespit aracıdır özellikle kısa metinlerin hızlı şekilde analiz edilmesine olanak tanıyan araç web tabanlı çalıştığı herhangi kurulum gerektirmez kopyala yapıştır yöntemiyle çalışan plagiarismchecker metinlerin temel düzeyde taranmasını sağlar kullanıcılarına kısa sürede sonuç sunar sağladığı temel raporlarla kullanıcıların içeriklerinin özgünlük durumunu anlamalarına yardımcı olur blog yazıları kısa makaleler ödevler gibi basit içeriklerde etkili şekilde çalışan araç karmaşık akademik metinler yerine küçük bireysel çalışmalar idealdir özellikle öğrenciler bireysel yazarlar arasında popülerdirhttpsplagiarismdetectornet adresinden web sitesine erişebilirsiniz 5plagiarisma plagiarisma 190dan fazla dili destekleyen hem çevrimiçi hem çevrimdışı kullanılabilen güçlü intihal tespit aracıdır web tabanlı platform olarak çalışmasının yanı sıra windows uygulamasıyla çevrimdışı tarama imkanı sunar google bing entegrasyonu sayesinde geniş web veri tabanını hızlı şekilde tarayarak içeriklerin orijinalliğini analiz eder pdf docx txt gibi farklı dosya formatlarını destekleyen plagiarisma dosya tabanlı çalışmalar üzerinde kolaylık sağlar çoklu dil desteği platformu uluslararası kullanıcılar uygun araç haline getirirken özellikle yazarlar öğrenciler akademisyenler tarafından tercih edilmektedir plagiarisma çeşitli disiplinlerde çalışan bireyler kapsamlı çözüm sunar hem akademik hem profesyonel içeriklerin özgünlüğünü korumaya yardımcı olur httpsplagiarismanettr adresinden web sitesine erişebilirsiniz intihal tespit araçları karşılaştırması",
    "user1": "HAKAN DEGER",
    "user2": "HAKAN DEGER",
    "similarity": 0.2062621686538099,
    "matchingWords": [
        "akademik",
        "akademisyenler",
        "algoritmaları",
        "analiz",
        "anlamalarına",
        "aracıdır",
        "arası",
        "arasında",
        "arayüzü",
        "arayüzüyle",
        "araç",
        "araçları",
        "araçtır",
        "araştırma",
        "araştırmacılar",
        "artırır",
        "aynı",
        "ayrıca",
        "basit",
        "başarılıdır",
        "başarısı",
        "belgelerde",
        "benzerlik",
        "bildirileri",
        "bilimsel",
        "bireysel",
        "biri",
        "blog",
        "bulunan",
        "büyük",
        "deneyimi",
        "deneyimini",
        "desteklenmesine",
        "destekleyen",
        "desteği",
        "detaylı",
        "değerlendirmeye",
        "dil",
        "dili",
        "diğer",
        "docx",
        "dostu",
        "dosya",
        "doğru",
        "doğrulukla",
        "durumunu",
        "dünya",
        "dürüstlük",
        "düzey",
        "düzeyde",
        "edebilir",
        "eder",
        "ederek",
        "edilen",
        "edilmesine",
        "en",
        "entegrasyonu",
        "erişim",
        "etik",
        "etkili",
        "eğitim",
        "farklı",
        "fazla",
        "formatlarını",
        "geliştirilen",
        "geniş",
        "gerektirmez",
        "getirmiştir",
        "gibi",
        "güvenilir",
        "güvenilirliğini",
        "güçlendirmektedir",
        "güçlü",
        "haline",
        "hem",
        "herhangi",
        "httpstrturnitincom",
        "httpswwwithenticatecom",
        "hızlı",
        "ideal",
        "idealdir",
        "intihal",
        "intihalnet",
        "intihalneti",
        "ithenticate",
        "içerikler",
        "içeriklerde",
        "içeriklerin",
        "içeriklerini",
        "içeriklerinin",
        "kaliteli",
        "kapsamlı",
        "karmaşık",
        "karşılaştırarak",
        "katkı",
        "kaynaklara",
        "kaynakları",
        "kitaplar",
        "kolay",
        "kolaylık",
        "konferans",
        "kontrol",
        "kontrollerinde",
        "konusundaki",
        "kopyala",
        "korunmasına",
        "kritik",
        "kullanıcı",
        "kullanıcılar",
        "kullanıcılara",
        "kullanıcıların",
        "kullanıcılarına",
        "kullanılan",
        "kullanım",
        "kullanımı",
        "kurulum",
        "kurumları",
        "küçük",
        "kısa",
        "makaleler",
        "makalelerin",
        "metinler",
        "metinlerin",
        "minimize",
        "odaklanmış",
        "olan",
        "olanak",
        "olarak",
        "oldukça",
        "olması",
        "olur",
        "optimize",
        "oranlarını",
        "oranını",
        "orijinallik",
        "orijinalliğini",
        "oynamaktadır",
        "oynar",
        "pdf",
        "plagiarismchecker",
        "platform",
        "platformlar",
        "platformudur",
        "pratik",
        "profesyonel",
        "rapor",
        "raporlamalar",
        "raporlar",
        "raporlarla",
        "raporları",
        "raporudur",
        "riskini",
        "rol",
        "sahip",
        "sayesinde",
        "sağladığı",
        "sağlama",
        "sağlanır",
        "sağlar",
        "seviyesini",
        "sistemi",
        "sistemidir",
        "sistemin",
        "sonuç",
        "standartların",
        "sunan",
        "sunar",
        "sunarak",
        "sunduğu",
        "sürede",
        "süreçlerinin",
        "sıra",
        "tabanları",
        "tabanlı",
        "tabanına",
        "tamamen",
        "tanıyan",
        "tarafından",
        "tarama",
        "taranmasını",
        "tarayarak",
        "temel",
        "tercih",
        "tespit",
        "tezler",
        "turnitin",
        "turnitinin",
        "türk",
        "türkçe",
        "uluslararası",
        "uygun",
        "vazgeçilmez",
        "veri",
        "verimliliğini",
        "web",
        "yanı",
        "yapısı",
        "yapıştır",
        "yardımcı",
        "yaygın",
        "yayımlanmadan",
        "yayınevleri",
        "yayınlanmış",
        "yayınlar",
        "yazarlar",
        "yazıları",
        "yerine",
        "yerli",
        "yöntemiyle",
        "yüksek",
        "zamanda",
        "çalışan",
        "çalışmalar",
        "çalışmalara",
        "çalışmalarla",
        "çalışmaların",
        "çalışmasının",
        "çalıştığı",
        "çapında",
        "çevrimdışı",
        "çeşitli",
        "çoklu",
        "çözüm",
        "çözümler",
        "ödevler",
        "önceki",
        "önemli",
        "özel",
        "özellikle",
        "özelliklerden",
        "özgünlük",
        "özgünlüğünü",
        "öğrenciler",
        "ücretsiz",
        "üniversiteler",
        "üniversiteleri",
        "üst",
        "üzerinde",
        "şekilde"
    ],
    "totalWords1": 6845,
    "totalWords2": 453,
    "matchingWordCount": 239,
    "uniqueWords1": 2280,
    "uniqueWords2": 33,
    "matchSpans": [
        {
            "start1": 17373,
            "length": 818,
            "start2": 1
        },
        {
            "start1": 18818,
            "length": 64,
            "start2": 1709
        },
        {
            "start1": 18907,
            "length": 676,
            "start2": 1832
        },
        {
            "start1": 19918,
            "length": 723,
            "start2": 2565
        },
        {
            "start1": 20644,
            "length": 28,
            "start2": 3288
        },
        {
            "start1": 22102,
            "length": 25,
            "start2": 4087
        }
    ],
    "diffSpans": [],
    "timeElapsed": 4.821,
    "timestamp": "2025-06-03T07:02:28+00:00Z",
    "content_id": "3",
    "file1_id": "9",
    "file2_id": "10",
    "file1_path_original": "C:\\Users\\hakan\\OneDrive\\Masaüstü\\deneme\\tasarim_raporu.docx_cleaned.txt",
    "file2_path_original": "C:\\Users\\hakan\\OneDrive\\Masaüstü\\deneme\\Intihal_Tespit_Araçları_Karşılaştırması.docx_cleaned.txt"
}